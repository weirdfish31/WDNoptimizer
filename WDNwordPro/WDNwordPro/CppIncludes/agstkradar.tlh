// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (a836a0ce).
//
// c:\dev\r_stk_v10.1.x\source\lib\release.net\tlhbuilder\agstkradar.tlh
//
// C++ source equivalent of Win32 type library AgSTKRadar.tlb
// compiler-generated file created 02/15/14 at 04:45:27 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "C:\Dev\R_STK_v10.1.x\Source\bin\Release.NET\AgAsHpopPlugin.DLL"
//  #import "C:\Dev\R_STK_v10.1.x\Source\bin\Release.NET\AgUiApplication.tlb"
//  #import "C:\Dev\R_STK_v10.1.x\Source\bin\Release.NET\AgUiCore.dll"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("b13a4b2d-0845-4f58-bb90-574f6bf5c960"))
/* LIBID */ __AgStkRadar;
struct __declspec(uuid("8bd3c1cd-46fb-4b58-9ba9-dbf9f68449b0"))
/* interface */ IAgStkRadarClutterGeometryPlugin;
struct __declspec(uuid("b37db896-c4bf-45e4-8275-cbf8c4e8d5ab"))
/* interface */ IAgStkRadarClutterGeometryPluginRegInfo;
enum AgEStkRadarValidSystems;
struct __declspec(uuid("5d786477-3efa-40b0-b5af-43b464b98597"))
/* interface */ IAgStkRadarClutterGeometryComputeParams;
struct __declspec(uuid("4c29405c-320a-40c7-b3b9-89d8bd601109"))
/* interface */ IAgStkRadarLink;
struct __declspec(uuid("bd12c96b-f441-44c3-b50f-e51d6f0b58ec"))
/* interface */ IAgStkRadarLinkGeometry;
struct __declspec(uuid("9e12b130-5de3-468b-85ea-877b2b479d74"))
/* interface */ IAgStkRadarPosVelProvider;
enum AgEStkRadarTerrainInterpMethod;
struct __declspec(uuid("73c5fc73-90b8-4dba-835a-0bc33cbe43a7"))
/* interface */ IAgStkRadarCBIntersectComputeParams;
struct __declspec(uuid("5e879406-38bf-4c80-9d0c-4d42026da5b4"))
/* interface */ IAgStkRadarCBIntersectComputeResult;
enum AgEStkRadarPosVelProviderRole;
struct __declspec(uuid("1e19bbad-232e-4722-9755-c69d2237b10e"))
/* dual interface */ IAgStkRadarClutterPatchCollection;
struct __declspec(uuid("ee81895a-f9c7-4a5f-a6c6-262dd7e2041f"))
/* interface */ IAgStkRadarClutterPatch;
struct __declspec(uuid("4b6799ff-d522-473c-9ee7-86f3286273a7"))
/* interface */ IAgStkRadarClutterMapPlugin;
struct __declspec(uuid("b3f9f7bd-7eb9-4ee4-8143-bc7411c18568"))
/* interface */ IAgStkRadarClutterMapComputeParams;
struct __declspec(uuid("c218c3f1-7e59-481f-8a3c-21467bbd1429"))
/* dual interface */ _IAgStkRadarPluginSite;
struct __declspec(uuid("cfaea168-0c8a-41db-9297-b47438b6b3f0"))
/* dual interface */ _IAgStkRadarClutterPatch;
struct __declspec(uuid("be62320a-9281-43f6-b02a-f9b31106d70b"))
/* interface */ IAgStkRadarSignal;
struct __declspec(uuid("3a6a18d3-b52a-4c49-b103-870806315626"))
/* dual interface */ _IAgSTKRadarSignal;
struct __declspec(uuid("245ddd26-3d7e-4308-bf00-dbb31fde9dd6"))
/* dual interface */ _IAgStkRadarLink;
struct __declspec(uuid("c17ba049-fd55-4872-9757-28069b8b17ea"))
/* dual interface */ _IAgStkRadarLinkGeometry;
struct __declspec(uuid("5230a91b-73df-4ee5-9ed9-e71c79d575f3"))
/* dual interface */ _IAgStkRadarPosVelProvider;
struct __declspec(uuid("c1747b50-51d1-4743-bf2e-77ac5931a677"))
/* dual interface */ _IAgStkRadarCBIntersectComputeResult;
struct __declspec(uuid("a69995f2-8960-4f64-ae27-0c445d1a715e"))
/* dual interface */ _IAgStkRadarClutterGeometryPluginRegInfo;
struct __declspec(uuid("6e41b74b-5083-400d-b4c3-d1c5f4461fc8"))
/* dual interface */ _IAgStkRadarClutterGeometryComputeParams;
struct __declspec(uuid("46257150-4090-4c8b-8658-fc302f5ce587"))
/* dual interface */ _IAgStkRadarClutterMapComputeParams;
struct __declspec(uuid("9a861c21-e4f4-42b3-8da6-8d7befe7d6f5"))
/* interface */ IAgStkRadarRcsPlugin;
struct __declspec(uuid("a5e8b338-01c8-4fa6-aceb-c561974b8f49"))
/* interface */ IAgStkRadarRcsProcessSignalsParams;
struct __declspec(uuid("f6f4d9ea-71fa-4b54-ac3d-8b3fa9149ff8"))
/* interface */ IAgStkRadarRcsComputeParams;
struct __declspec(uuid("de892fec-fec0-4d46-a3eb-b4803253e137"))
/* dual interface */ _IAgStkRadarRcsComputeParams;
struct __declspec(uuid("34a62cf6-32d7-41dd-a2bb-3706883e2392"))
/* dual interface */ _IAgSTKRadarPolarization;
struct __declspec(uuid("637bb655-434b-4208-a1d5-de8f314dfc8a"))
/* dual interface */ _IAgSTKRadarPolarizationLinear;
struct __declspec(uuid("7c14792d-b7ce-48a1-9667-b7e523cb58a9"))
/* dual interface */ _IAgSTKRadarPolarizationElliptical;
struct __declspec(uuid("de562710-f869-44d8-8434-a25c41e32f8e"))
/* dual interface */ _IAgStkRadarRcsProcessSignalsParams;
struct /* coclass */ AgStkRadarCBIntersectComputeParams;
struct __declspec(uuid("f7d453de-91a5-4fbd-a345-601d3b8b3718"))
/* dual interface */ _IAgStkRadarCBIntersectComputeParams;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterGeometryPluginRegInfo, __uuidof(IAgStkRadarClutterGeometryPluginRegInfo));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarCBIntersectComputeParams, __uuidof(IAgStkRadarCBIntersectComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarCBIntersectComputeResult, __uuidof(IAgStkRadarCBIntersectComputeResult));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarPosVelProvider, __uuidof(IAgStkRadarPosVelProvider));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarLinkGeometry, __uuidof(IAgStkRadarLinkGeometry));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarLink, __uuidof(IAgStkRadarLink));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterPatch, __uuidof(IAgStkRadarClutterPatch));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterPatchCollection, __uuidof(IAgStkRadarClutterPatchCollection));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterGeometryComputeParams, __uuidof(IAgStkRadarClutterGeometryComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterGeometryPlugin, __uuidof(IAgStkRadarClutterGeometryPlugin));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterMapComputeParams, __uuidof(IAgStkRadarClutterMapComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarClutterMapPlugin, __uuidof(IAgStkRadarClutterMapPlugin));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarPluginSite, __uuidof(_IAgStkRadarPluginSite));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterPatch, __uuidof(_IAgStkRadarClutterPatch));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarSignal, __uuidof(IAgStkRadarSignal));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarSignal, __uuidof(_IAgSTKRadarSignal));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarLink, __uuidof(_IAgStkRadarLink));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarLinkGeometry, __uuidof(_IAgStkRadarLinkGeometry));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarPosVelProvider, __uuidof(_IAgStkRadarPosVelProvider));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarCBIntersectComputeResult, __uuidof(_IAgStkRadarCBIntersectComputeResult));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterGeometryPluginRegInfo, __uuidof(_IAgStkRadarClutterGeometryPluginRegInfo));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterGeometryComputeParams, __uuidof(_IAgStkRadarClutterGeometryComputeParams));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarClutterMapComputeParams, __uuidof(_IAgStkRadarClutterMapComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarRcsProcessSignalsParams, __uuidof(IAgStkRadarRcsProcessSignalsParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarRcsComputeParams, __uuidof(IAgStkRadarRcsComputeParams));
_COM_SMARTPTR_TYPEDEF(IAgStkRadarRcsPlugin, __uuidof(IAgStkRadarRcsPlugin));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarRcsComputeParams, __uuidof(_IAgStkRadarRcsComputeParams));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarPolarization, __uuidof(_IAgSTKRadarPolarization));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarPolarizationLinear, __uuidof(_IAgSTKRadarPolarizationLinear));
_COM_SMARTPTR_TYPEDEF(_IAgSTKRadarPolarizationElliptical, __uuidof(_IAgSTKRadarPolarizationElliptical));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarRcsProcessSignalsParams, __uuidof(_IAgStkRadarRcsProcessSignalsParams));
_COM_SMARTPTR_TYPEDEF(_IAgStkRadarCBIntersectComputeParams, __uuidof(_IAgStkRadarCBIntersectComputeParams));

//
// Type library items
//

enum AgEStkRadarValidSystems
{
    eStkRadarAllSystems = 1,
    eStkRadarMonostaticSystemsOnly = 2,
    eStkRadarBistaticSystemsOnly = 3
};

struct __declspec(uuid("b37db896-c4bf-45e4-8275-cbf8c4e8d5ab"))
IAgStkRadarClutterGeometryPluginRegInfo : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ValidRadarSystems (
        /*[in]*/ enum AgEStkRadarValidSystems _arg1 ) = 0;
};

enum AgEStkRadarTerrainInterpMethod
{
    eStkRadarBilinearTerrainInterp = 1,
    eStkRadarHighestPostTerrainInterp = 2,
    eStkRadarTriPlanarTerrainInterp = 3
};

struct __declspec(uuid("73c5fc73-90b8-4dba-835a-0bc33cbe43a7"))
IAgStkRadarCBIntersectComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetBasePositionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetBasePositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall GetDirectionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetDirectionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
};

struct __declspec(uuid("5e879406-38bf-4c80-9d0c-4d42026da5b4"))
IAgStkRadarCBIntersectComputeResult : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IntersectionFound (
        /*[out,retval]*/ VARIANT_BOOL * pIntersectionFound ) = 0;
      virtual HRESULT __stdcall GetIntercept1CBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_Intercept1CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetIntercept2CBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_Intercept2CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Multiplier1 (
        /*[out,retval]*/ double * pMultiplier1 ) = 0;
      virtual HRESULT __stdcall get_Multiplier2 (
        /*[out,retval]*/ double * pMultiplier2 ) = 0;
      virtual HRESULT __stdcall GetBasePositionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetDirectionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

enum AgEStkRadarPosVelProviderRole
{
    eStkRadarTransmitterPosVelRole = 1,
    eStkRadarReceiverPosVelRole = 2,
    eStkRadarTargetPosVelRole = 3,
    eStkRadarClutterPatchPosVelRole = 4
};

struct __declspec(uuid("9e12b130-5de3-468b-85ea-877b2b479d74"))
IAgStkRadarPosVelProvider : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CurrentTime (
        /*[out,retval]*/ double * pCurrentTime ) = 0;
      virtual HRESULT __stdcall GetVelocityCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_VelocityCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetPositionCBF (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_PositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetPositionLLA (
        /*[out]*/ double * latitude,
        /*[out]*/ double * longitude,
        /*[out]*/ double * altitude ) = 0;
      virtual HRESULT __stdcall get_PositionLLAArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusDetic (
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusCentric (
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall GetSurfaceNormalDetic (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalDeticArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetSurfaceNormalCentric (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalCentricArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetTerrainHeight (
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall GetTerrainHeightForLatLon (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusDetic (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusCentric (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalDetic (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalDeticArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalCentric (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalCentricArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeCentralBodyIntersect (
        /*[in]*/ struct IAgStkRadarCBIntersectComputeParams * cbIntersectComputeParams,
        /*[out,retval]*/ struct IAgStkRadarCBIntersectComputeResult * * ppCBIntersectComputeResult ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToLLA (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z,
        /*[out]*/ double * latitude,
        /*[out]*/ double * longitude,
        /*[out]*/ double * altitude ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToLLAArray (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertLLAToCBFCartesian (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ double altitude,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall ConvertLLAToCBFCartesianArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ double altitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToVVLHCartesian (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out]*/ double * xVvlh,
        /*[out]*/ double * yVvlh,
        /*[out]*/ double * zVvlh ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToVVLHCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertBodyCartesianToCBFCartesian (
        /*[in]*/ double xBody,
        /*[in]*/ double yBody,
        /*[in]*/ double zBody,
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall ConvertBodyCartesianToCBFCartesianArray (
        /*[in]*/ double xBody,
        /*[in]*/ double yBody,
        /*[in]*/ double zBody,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToBodyCartesian (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out]*/ double * xBody,
        /*[out]*/ double * yBody,
        /*[out]*/ double * zBody ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToBodyCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Role (
        /*[out,retval]*/ enum AgEStkRadarPosVelProviderRole * pPosVelRole ) = 0;
};

struct __declspec(uuid("bd12c96b-f441-44c3-b50f-e51d6f0b58ec"))
IAgStkRadarLinkGeometry : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTargetPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTransmitRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppReceiveRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_RangeSum (
        /*[out,retval]*/ double * pRangeSum ) = 0;
      virtual HRESULT __stdcall get_Closure (
        /*[out,retval]*/ double * pClosure ) = 0;
      virtual HRESULT __stdcall get_MLCVelocity (
        /*[out,retval]*/ double * pMLCVelocity ) = 0;
      virtual HRESULT __stdcall get_BistaticAngle (
        /*[out,retval]*/ double * pBistaticAngle ) = 0;
      virtual HRESULT __stdcall get_IncidentAzimuth (
        /*[out,retval]*/ double * pIncidentAz ) = 0;
      virtual HRESULT __stdcall get_IncidentElevation (
        /*[out,retval]*/ double * pIncidentEl ) = 0;
      virtual HRESULT __stdcall get_ReflectedAzimuth (
        /*[out,retval]*/ double * pReflectedAz ) = 0;
      virtual HRESULT __stdcall get_ReflectedElevation (
        /*[out,retval]*/ double * pReflectedEl ) = 0;
      virtual HRESULT __stdcall get_XYAngleRate (
        /*[out,retval]*/ double * pXYAngleRate ) = 0;
      virtual HRESULT __stdcall GetTgt2XmtRdrRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_Tgt2XmtRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetTgt2RcvRdrRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_Tgt2RcvRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetXmtRdr2TgtRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_XmtRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetRcvRdr2TgtRelPosCBFCartesian (
        /*[out]*/ double * xCbf,
        /*[out]*/ double * yCbf,
        /*[out]*/ double * zCbf ) = 0;
      virtual HRESULT __stdcall get_RcvRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("4c29405c-320a-40c7-b3b9-89d8bd601109"))
IAgStkRadarLink : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Geometry (
        /*[out,retval]*/ struct IAgStkRadarLinkGeometry * * ppLinkGeometry ) = 0;
      virtual HRESULT __stdcall ComputeDopplerResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pDopplerResolution ) = 0;
      virtual HRESULT __stdcall ComputeRangeResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pRangeResolution ) = 0;
      virtual HRESULT __stdcall ComputeIsoDoppler (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeIsoRange (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("ee81895a-f9c7-4a5f-a6c6-262dd7e2041f"))
IAgStkRadarClutterPatch : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppPosVelProvider ) = 0;
      virtual HRESULT __stdcall SetPositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall SetVelocityCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * pArea ) = 0;
      virtual HRESULT __stdcall put_Area (
        /*[in]*/ double pArea ) = 0;
};

struct __declspec(uuid("1e19bbad-232e-4722-9755-c69d2237b10e"))
IAgStkRadarClutterPatchCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ struct IAgStkRadarClutterPatch * Item ) = 0;
      virtual HRESULT __stdcall RemoveAt (
        /*[in]*/ long index ) = 0;
      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall Add (
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
};

struct __declspec(uuid("5d786477-3efa-40b0-b5af-43b464b98597"))
IAgStkRadarClutterGeometryComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_ClutterPatches (
        /*[out,retval]*/ struct IAgStkRadarClutterPatchCollection * * ppClutterPatchCollection ) = 0;
};

struct __declspec(uuid("8bd3c1cd-46fb-4b58-9ba9-dbf9f68449b0"))
IAgStkRadarClutterGeometryPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Register (
        /*[in]*/ struct IAgStkRadarClutterGeometryPluginRegInfo * registrationInfo ) = 0;
      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall Compute (
        /*[in]*/ struct IAgStkRadarClutterGeometryComputeParams * computeParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
};

struct __declspec(uuid("b3f9f7bd-7eb9-4ee4-8143-bc7411c18568"))
IAgStkRadarClutterMapComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_ClutterPatch (
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("4b6799ff-d522-473c-9ee7-86f3286273a7"))
IAgStkRadarClutterMapPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall Compute (
        /*[in]*/ struct IAgStkRadarClutterMapComputeParams * computeParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
};

struct __declspec(uuid("c218c3f1-7e59-481f-8a3c-21467bbd1429"))
_IAgStkRadarPluginSite : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SiteName (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall Message (
        /*[in]*/ enum AgEUtLogMsgType msgType,
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall get_VectorToolProvider (
        /*[out,retval]*/ struct IAgCrdnPluginProvider * * ppCrdnPrv ) = 0;
      virtual HRESULT __stdcall get_ScenarioDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_InstallDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_ConfigDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_CalcToolProvider (
        /*[out,retval]*/ struct IAgCrdnPluginCalcProvider * * ppCrdnPrv ) = 0;
      virtual HRESULT __stdcall get_StkRootObject (
        /*[out,retval]*/ IDispatch * * ppStkRootobject ) = 0;
};

struct __declspec(uuid("cfaea168-0c8a-41db-9297-b47438b6b3f0"))
_IAgStkRadarClutterPatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppPosVelProvider ) = 0;
      virtual HRESULT __stdcall SetPositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall SetVelocityCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * pArea ) = 0;
      virtual HRESULT __stdcall put_Area (
        /*[in]*/ double pArea ) = 0;
};

struct __declspec(uuid("be62320a-9281-43f6-b02a-f9b31106d70b"))
IAgStkRadarSignal : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PulseRepetitionFrequency (
        /*[out,retval]*/ double * pPrf ) = 0;
      virtual HRESULT __stdcall get_PulseCompressionRatio (
        /*[out,retval]*/ double * pPcr ) = 0;
      virtual HRESULT __stdcall get_PulseWidth (
        /*[out,retval]*/ double * pPulseWidth ) = 0;
      virtual HRESULT __stdcall get_NumberOfPulses (
        /*[out,retval]*/ int * pNumPulses ) = 0;
      virtual HRESULT __stdcall get_Rcs (
        /*[out,retval]*/ double * pRcs ) = 0;
      virtual HRESULT __stdcall put_Rcs (
        /*[in]*/ double pRcs ) = 0;
};

struct __declspec(uuid("3a6a18d3-b52a-4c49-b103-870806315626"))
_IAgSTKRadarSignal : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall put_Frequency (
        /*[in]*/ double pFrequency ) = 0;
      virtual HRESULT __stdcall get_UpperBandLimit (
        /*[out,retval]*/ double * pUpperLimit ) = 0;
      virtual HRESULT __stdcall put_UpperBandLimit (
        /*[in]*/ double pUpperLimit ) = 0;
      virtual HRESULT __stdcall get_LowerBandLimit (
        /*[out,retval]*/ double * pLowerLimit ) = 0;
      virtual HRESULT __stdcall put_LowerBandLimit (
        /*[in]*/ double pLowerLimit ) = 0;
      virtual HRESULT __stdcall get_Power (
        /*[out,retval]*/ double * pPower ) = 0;
      virtual HRESULT __stdcall put_Power (
        /*[in]*/ double pPower ) = 0;
      virtual HRESULT __stdcall get_Polarization (
        /*[out,retval]*/ struct IAgCRPolarization * * ppSignalPolarization ) = 0;
      virtual HRESULT __stdcall put_Polarization (
        /*[in]*/ struct IAgCRPolarization * ppSignalPolarization ) = 0;
      virtual HRESULT __stdcall ComputePolLoss (
        /*[in]*/ struct IAgCRPolarization * rcvSidePolarization,
        /*[out,retval]*/ double * pPolLoss ) = 0;
      virtual HRESULT __stdcall ComputePolRotationAngle (
        /*[in]*/ struct IAgCRPolarization * rcvSidePolarization,
        /*[out,retval]*/ double * pRotationAngle ) = 0;
      virtual HRESULT __stdcall get_PulseRepetitionFrequency (
        /*[out,retval]*/ double * pPrf ) = 0;
      virtual HRESULT __stdcall get_PulseCompressionRatio (
        /*[out,retval]*/ double * pPcr ) = 0;
      virtual HRESULT __stdcall get_PulseWidth (
        /*[out,retval]*/ double * pPulseWidth ) = 0;
      virtual HRESULT __stdcall get_NumberOfPulses (
        /*[out,retval]*/ int * pNumPulses ) = 0;
      virtual HRESULT __stdcall get_Rcs (
        /*[out,retval]*/ double * pRcs ) = 0;
      virtual HRESULT __stdcall put_Rcs (
        /*[in]*/ double pRcs ) = 0;
};

struct __declspec(uuid("245ddd26-3d7e-4308-bf00-dbb31fde9dd6"))
_IAgStkRadarLink : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Geometry (
        /*[out,retval]*/ struct IAgStkRadarLinkGeometry * * ppLinkGeometry ) = 0;
      virtual HRESULT __stdcall ComputeDopplerResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pDopplerResolution ) = 0;
      virtual HRESULT __stdcall ComputeRangeResolution (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ double * pRangeResolution ) = 0;
      virtual HRESULT __stdcall ComputeIsoDoppler (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeIsoRange (
        /*[in]*/ struct IAgCRSignal * radarSignal,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("c17ba049-fd55-4872-9757-28069b8b17ea"))
_IAgStkRadarLinkGeometry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TargetPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTargetPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppTransmitRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPosVelProvider (
        /*[out,retval]*/ struct IAgStkRadarPosVelProvider * * ppReceiveRadarPosVelProvider ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_ReceiveRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarAngleRate (
        /*[out,retval]*/ double * pAngleRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarRangeRate (
        /*[out,retval]*/ double * pRangeRate ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarConeAngle (
        /*[out,retval]*/ double * pConeAngle ) = 0;
      virtual HRESULT __stdcall get_TransmitRadarPropTime (
        /*[out,retval]*/ double * pPropTime ) = 0;
      virtual HRESULT __stdcall get_RangeSum (
        /*[out,retval]*/ double * pRangeSum ) = 0;
      virtual HRESULT __stdcall get_Closure (
        /*[out,retval]*/ double * pClosure ) = 0;
      virtual HRESULT __stdcall get_MLCVelocity (
        /*[out,retval]*/ double * pMLCVelocity ) = 0;
      virtual HRESULT __stdcall get_BistaticAngle (
        /*[out,retval]*/ double * pBistaticAngle ) = 0;
      virtual HRESULT __stdcall get_IncidentAzimuth (
        /*[out,retval]*/ double * pIncidentAz ) = 0;
      virtual HRESULT __stdcall get_IncidentElevation (
        /*[out,retval]*/ double * pIncidentEl ) = 0;
      virtual HRESULT __stdcall get_ReflectedAzimuth (
        /*[out,retval]*/ double * pReflectedAz ) = 0;
      virtual HRESULT __stdcall get_ReflectedElevation (
        /*[out,retval]*/ double * pReflectedEl ) = 0;
      virtual HRESULT __stdcall get_XYAngleRate (
        /*[out,retval]*/ double * pXYAngleRate ) = 0;
      virtual HRESULT __stdcall get_Tgt2XmtRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Tgt2RcvRdrRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_XmtRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_RcvRdr2TgtRelPosCBFCartesianArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("5230a91b-73df-4ee5-9ed9-e71c79d575f3"))
_IAgStkRadarPosVelProvider : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CurrentTime (
        /*[out,retval]*/ double * pCurrentTime ) = 0;
      virtual HRESULT __stdcall get_VelocityCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PositionLLAArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusDetic (
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall get_LocalRadiusCentric (
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalDeticArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_SurfaceNormalCentricArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetTerrainHeight (
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall GetTerrainHeightForLatLon (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ enum AgEStkRadarTerrainInterpMethod interpMethod,
        /*[out,retval]*/ double * pTerrainHeight ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusDetic (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusDetic ) = 0;
      virtual HRESULT __stdcall ComputeLocalRadiusCentric (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ double * pLocalRadiusCentric ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalDeticArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeSurfaceNormalCentricArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ComputeCentralBodyIntersect (
        /*[in]*/ struct IAgStkRadarCBIntersectComputeParams * cbIntersectComputeParams,
        /*[out,retval]*/ struct IAgStkRadarCBIntersectComputeResult * * ppCBIntersectComputeResult ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToLLAArray (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertLLAToCBFCartesianArray (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ double altitude,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToVVLHCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertBodyCartesianToCBFCartesianArray (
        /*[in]*/ double xBody,
        /*[in]*/ double yBody,
        /*[in]*/ double zBody,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall ConvertCBFCartesianToBodyCartesianArray (
        /*[in]*/ double xCbf,
        /*[in]*/ double yCbf,
        /*[in]*/ double zCbf,
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Role (
        /*[out,retval]*/ enum AgEStkRadarPosVelProviderRole * pPosVelRole ) = 0;
};

struct __declspec(uuid("c1747b50-51d1-4743-bf2e-77ac5931a677"))
_IAgStkRadarCBIntersectComputeResult : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IntersectionFound (
        /*[out,retval]*/ VARIANT_BOOL * pIntersectionFound ) = 0;
      virtual HRESULT __stdcall get_Intercept1CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Intercept2CBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_Multiplier1 (
        /*[out,retval]*/ double * pMultiplier1 ) = 0;
      virtual HRESULT __stdcall get_Multiplier2 (
        /*[out,retval]*/ double * pMultiplier2 ) = 0;
      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
};

struct __declspec(uuid("a69995f2-8960-4f64-ae27-0c445d1a715e"))
_IAgStkRadarClutterGeometryPluginRegInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ValidRadarSystems (
        /*[in]*/ enum AgEStkRadarValidSystems _arg1 ) = 0;
};

struct __declspec(uuid("6e41b74b-5083-400d-b4c3-d1c5f4461fc8"))
_IAgStkRadarClutterGeometryComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_ClutterPatches (
        /*[out,retval]*/ struct IAgStkRadarClutterPatchCollection * * ppClutterPatchCollection ) = 0;
};

struct __declspec(uuid("46257150-4090-4c8b-8658-fc302f5ce587"))
_IAgStkRadarClutterMapComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RadarLink (
        /*[out,retval]*/ struct IAgStkRadarLink * * ppRadarLink ) = 0;
      virtual HRESULT __stdcall get_ClutterPatch (
        /*[out,retval]*/ struct IAgStkRadarClutterPatch * * ppClutterPatch ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("a5e8b338-01c8-4fa6-aceb-c561974b8f49"))
IAgStkRadarRcsProcessSignalsParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetIncidentBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetReflectedBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PrimaryPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_OrthoPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("f6f4d9ea-71fa-4b54-ac3d-8b3fa9149ff8"))
IAgStkRadarRcsComputeParams : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall GetIncidentBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall GetReflectedBodyFixedVector (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
};

struct __declspec(uuid("9a861c21-e4f4-42b3-8da6-8d7befe7d6f5"))
IAgStkRadarRcsPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Initialize (
        /*[in]*/ struct IAgUtPluginSite * site ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[out,retval]*/ VARIANT_BOOL * pValidPreCompute ) = 0;
      virtual HRESULT __stdcall ProcessSignals (
        /*[in]*/ struct IAgStkRadarRcsProcessSignalsParams * processSignalsParams ) = 0;
      virtual HRESULT __stdcall Compute (
        /*[in]*/ struct IAgStkRadarRcsComputeParams * computeRcsParams ) = 0;
      virtual HRESULT __stdcall PostCompute ( ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
      virtual HRESULT __stdcall get_IsDynamic (
        /*[out,retval]*/ VARIANT_BOOL * pIsDynamic ) = 0;
};

struct __declspec(uuid("de892fec-fec0-4d46-a3eb-b4803253e137"))
_IAgStkRadarRcsComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ double * pTime ) = 0;
      virtual HRESULT __stdcall get_Frequency (
        /*[out,retval]*/ double * pFrequency ) = 0;
      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_PrimaryChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcs (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall put_OrthoChannelRcsCross (
        /*[in]*/ double _arg1 ) = 0;
};

struct __declspec(uuid("34a62cf6-32d7-41dd-a2bb-3706883e2392"))
_IAgSTKRadarPolarization : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgECRPolarizationType * pType ) = 0;
};

struct __declspec(uuid("637bb655-434b-4208-a1d5-de8f314dfc8a"))
_IAgSTKRadarPolarizationLinear : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgECRPolarizationType * pType ) = 0;
      virtual HRESULT __stdcall get_TiltAngle (
        /*[out,retval]*/ double * pTiltAngle ) = 0;
      virtual HRESULT __stdcall put_TiltAngle (
        /*[in]*/ double pTiltAngle ) = 0;
      virtual HRESULT __stdcall get_AxialRatio (
        /*[out,retval]*/ double * pAxialRatio ) = 0;
      virtual HRESULT __stdcall get_ReferenceAxis (
        /*[out,retval]*/ enum AgECRPolarizationRefAxis * pReferenceAxis ) = 0;
      virtual HRESULT __stdcall put_ReferenceAxis (
        /*[in]*/ enum AgECRPolarizationRefAxis pReferenceAxis ) = 0;
};

struct __declspec(uuid("7c14792d-b7ce-48a1-9667-b7e523cb58a9"))
_IAgSTKRadarPolarizationElliptical : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum AgECRPolarizationType * pType ) = 0;
      virtual HRESULT __stdcall get_TiltAngle (
        /*[out,retval]*/ double * pTiltAngle ) = 0;
      virtual HRESULT __stdcall put_TiltAngle (
        /*[in]*/ double pTiltAngle ) = 0;
      virtual HRESULT __stdcall get_AxialRatio (
        /*[out,retval]*/ double * pAxialRatio ) = 0;
      virtual HRESULT __stdcall put_AxialRatio (
        /*[in]*/ double pAxialRatio ) = 0;
      virtual HRESULT __stdcall get_ReferenceAxis (
        /*[out,retval]*/ enum AgECRPolarizationRefAxis * pReferenceAxis ) = 0;
      virtual HRESULT __stdcall put_ReferenceAxis (
        /*[in]*/ enum AgECRPolarizationRefAxis pReferenceAxis ) = 0;
};

struct __declspec(uuid("de562710-f869-44d8-8434-a25c41e32f8e"))
_IAgStkRadarRcsProcessSignalsParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_InicidentBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_ReflectedBodyFixedVectorArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall get_PrimaryPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall get_OrthoPolChannelSignal (
        /*[out,retval]*/ struct IAgCRSignal * * ppSignal ) = 0;
      virtual HRESULT __stdcall ConstructPolarization (
        /*[in]*/ enum AgECRPolarizationType polType,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarization ) = 0;
      virtual HRESULT __stdcall ConstructPolarizationCopy (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppPolarizationCopy ) = 0;
      virtual HRESULT __stdcall ConstructOrthogonalPolarization (
        /*[in]*/ struct IAgCRPolarization * polarizationToCopy,
        /*[out,retval]*/ struct IAgCRPolarization * * ppOrthoPolarization ) = 0;
};

struct __declspec(uuid("1e77cfdf-11bd-4fbd-8216-d19056449612"))
AgStkRadarCBIntersectComputeParams;
    // [ default ] interface _IAgStkRadarCBIntersectComputeParams
    // interface IAgStkRadarCBIntersectComputeParams

struct __declspec(uuid("f7d453de-91a5-4fbd-a345-601d3b8b3718"))
_IAgStkRadarCBIntersectComputeParams : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BasePositionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetBasePositionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall get_DirectionCBFArray (
        /*[out,retval]*/ SAFEARRAY * * ppArray ) = 0;
      virtual HRESULT __stdcall SetDirectionCBF (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
};

#pragma pack(pop)
