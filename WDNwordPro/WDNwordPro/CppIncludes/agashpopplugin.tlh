// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (690222ba).
//
// c:\r_stk_v9.2.x\source\lib\release.net\tlhbuilder\agashpopplugin.tlh
//
// C++ source equivalent of Win32 type library AgAsHpopPlugin.tlb
// compiler-generated file created 11/23/11 at 05:29:07 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("4a873d66-e8aa-4cfa-a1ad-3990a91cc6f7"))
/* LIBID */ __AgAsHpopPlugin;
enum AgEAsHpopPluginErrorCodes;
struct /* coclass */ AgAsHpopPluginResult;
struct __declspec(uuid("33922bcb-fa7a-40b6-b94f-ae9c18a928fa"))
/* dual interface */ IAgAsHpopPluginResult;
enum AgEForceModelType;
enum AgEAsHpopPluginEventIndicators;
struct /* coclass */ AgAsHpopPluginResultEval;
struct __declspec(uuid("4518fc76-4b7d-4926-9cb5-e36af7d94733"))
/* dual interface */ IAgAsHpopPluginResultEval;
struct /* coclass */ AgAsHpopPluginResultPostEval;
struct __declspec(uuid("11317870-1ae0-416a-9e15-e00b71dfd5d9"))
/* dual interface */ IAgAsHpopPluginResultPostEval;
enum AgEAccelType;
struct /* coclass */ AgAsHpopPluginSampleEngine;
struct __declspec(uuid("04f3121d-439f-4618-a6dc-4b0ec3d94c68"))
/* interface */ IAgAsHpopPluginSampleEngine;
struct __declspec(uuid("efca652b-b5e5-4e7d-bc93-4b81a1bd8aa5"))
/* interface */ IAgAsHpopPlugin;
enum AgEAsLightReflectionErrorCodes;
struct /* coclass */ AgAsLightReflectionResultRegister;
struct __declspec(uuid("ef4cbec2-8bc9-4e4f-811e-1cc9b2209d37"))
/* dual interface */ IAgAsLightReflectionResultRegister;
struct /* coclass */ AgAsLightReflectionResult;
struct __declspec(uuid("4825c756-3384-4028-ac6b-9c492cf54298"))
/* dual interface */ IAgAsLightReflectionResult;
struct /* coclass */ AgAsLightReflectionResultEval;
struct __declspec(uuid("18153b47-d0b5-46c1-8f58-fcc8ebdebd19"))
/* dual interface */ IAgAsLightReflectionResultEval;
struct /* coclass */ AgAsLightReflectionPluginSample;
struct __declspec(uuid("597d4d2b-fcdd-479f-88cc-2026f011f5cf"))
/* interface */ IAgAsLightReflectionPluginSample;
struct __declspec(uuid("c4e69b72-9c58-4b63-b720-9c96124fc2e4"))
/* interface */ IAgAsLightReflectionPlugin;
struct /* coclass */ AgEOMFuncHPOPPluginResult;
struct /* coclass */ AgEOMFuncHPOPPluginResultEval;
struct /* coclass */ AgEOMFuncHPOPPluginResultPostEval;
struct __declspec(uuid("10ccc6c0-58cc-4ec3-bab2-aad3e8ccb7b0"))
/* interface */ IAgAsEOMFuncPlugin;
struct __declspec(uuid("7b7aaacb-773c-4c5d-bd88-62d0a9f05663"))
/* dual interface */ IAgAsEOMFuncPluginRegisterHandler;
enum AgEAsEOMFuncPluginInputStateValues;
enum AgEAsEOMFuncPluginOutputStateValues;
enum AgEAsEOMFuncPluginEventTypes;
struct __declspec(uuid("c0b4c47f-9292-4f13-ba9b-7dc4117e6720"))
/* dual interface */ IAgAsEOMFuncPluginSetIndicesHandler;
struct __declspec(uuid("0bccb4e4-1ca6-4919-9f24-dca7b7407fad"))
/* dual interface */ IAgAsEOMFuncPluginStateVector;
enum AgEAsEOMFuncPluginErrorCodes;
struct /* coclass */ AgAsEOMFuncPluginRegisterHandler;
struct /* coclass */ AgAsEOMFuncPluginSetIndicesHandler;
struct /* coclass */ AgAsEOMFuncPluginStateVector;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAgAsHpopPluginResult, __uuidof(IAgAsHpopPluginResult));
_COM_SMARTPTR_TYPEDEF(IAgAsHpopPluginResultEval, __uuidof(IAgAsHpopPluginResultEval));
_COM_SMARTPTR_TYPEDEF(IAgAsHpopPluginResultPostEval, __uuidof(IAgAsHpopPluginResultPostEval));
_COM_SMARTPTR_TYPEDEF(IAgAsHpopPluginSampleEngine, __uuidof(IAgAsHpopPluginSampleEngine));
_COM_SMARTPTR_TYPEDEF(IAgAsHpopPlugin, __uuidof(IAgAsHpopPlugin));
_COM_SMARTPTR_TYPEDEF(IAgAsLightReflectionResultRegister, __uuidof(IAgAsLightReflectionResultRegister));
_COM_SMARTPTR_TYPEDEF(IAgAsLightReflectionResult, __uuidof(IAgAsLightReflectionResult));
_COM_SMARTPTR_TYPEDEF(IAgAsLightReflectionResultEval, __uuidof(IAgAsLightReflectionResultEval));
_COM_SMARTPTR_TYPEDEF(IAgAsLightReflectionPluginSample, __uuidof(IAgAsLightReflectionPluginSample));
_COM_SMARTPTR_TYPEDEF(IAgAsLightReflectionPlugin, __uuidof(IAgAsLightReflectionPlugin));
_COM_SMARTPTR_TYPEDEF(IAgAsEOMFuncPluginRegisterHandler, __uuidof(IAgAsEOMFuncPluginRegisterHandler));
_COM_SMARTPTR_TYPEDEF(IAgAsEOMFuncPluginSetIndicesHandler, __uuidof(IAgAsEOMFuncPluginSetIndicesHandler));
_COM_SMARTPTR_TYPEDEF(IAgAsEOMFuncPluginStateVector, __uuidof(IAgAsEOMFuncPluginStateVector));
_COM_SMARTPTR_TYPEDEF(IAgAsEOMFuncPlugin, __uuidof(IAgAsEOMFuncPlugin));

//
// Type library items
//

enum AgEAsHpopPluginErrorCodes
{
    E_HPOP_PLUGIN_INTERNAL_FAILURE = -2147221247,
    E_HPOP_PLUGIN_NOT_CONFIGURED = -2147221246,
    E_HPOP_PLUGIN_SRP_IS_OFF = -2147221245,
    E_HPOP_PLUGIN_DRAG_IS_OFF = -2147221244,
    E_HPOP_PLUGIN_GRAVFIELD_UNDEFINED = -2147221243,
    E_HPOP_PLUGIN_FRCMDL_TYPE_NOT_FOUND = -2147221242,
    E_HPOP_PLUGIN_INVALID_SQR = -2147221241,
    E_HPOP_PLUGIN_TEMPERATURE_UNAVAILABLE = -2147221240,
    E_HPOP_PLUGIN_PRESSURE_UNAVAILABLE = -2147221239,
    E_HPOP_PLUGIN_INVALID_ACCELERATION_TYPE = -2147221238,
    E_HPOP_PLUGIN_RADPRESSURE_IS_OFF = -2147221237,
    E_HPOP_PLUGIN_NO_FUEL = -2147221236,
    E_HPOP_PLUGIN_NOT_USING_FLUX_FILE = -2147221235,
    E_HPOP_PLUGIN_SET_TOTAL_MASS_INVALID = -2147221234
};

struct __declspec(uuid("fa9be50d-96ee-4b52-b67e-a1f20a5cb23a"))
AgAsHpopPluginResult;
    // [ default ] interface IAgAsHpopPluginResult

enum AgEForceModelType
{
    eGravityModel = 0,
    eSolidTidesModel = 1,
    eOceanTidesModel = 2,
    eDragModel = 3,
    eSRPModel = 4,
    eThirdBodyModel = 5,
    eGenRelativityModel = 6,
    eAlbedoModel = 7,
    eThermalRadiationPressureModel = 8
};

enum AgEAsHpopPluginEventIndicators
{
    AgEAsHpopPluginEventIndicatorsStopPropagation = 0,
    AgEAsHpopPluginEventIndicatorsStopSegment = 1,
    AgEAsHpopPluginEventIndicatorsMarkDiscontinuity = 2
};

struct __declspec(uuid("33922bcb-fa7a-40b6-b94f-ae9c18a928fa"))
IAgAsHpopPluginResult : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pMu ) = 0;
      virtual HRESULT __stdcall PosVel (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall get_Cd (
        /*[out,retval]*/ double * pCd ) = 0;
      virtual HRESULT __stdcall put_Cd (
        /*[in]*/ double pCd ) = 0;
      virtual HRESULT __stdcall get_Cr (
        /*[out,retval]*/ double * pCr ) = 0;
      virtual HRESULT __stdcall put_Cr (
        /*[in]*/ double pCr ) = 0;
      virtual HRESULT __stdcall get_DragArea (
        /*[out,retval]*/ double * pDragArea ) = 0;
      virtual HRESULT __stdcall put_DragArea (
        /*[in]*/ double pDragArea ) = 0;
      virtual HRESULT __stdcall get_SRPArea (
        /*[out,retval]*/ double * pSRPArea ) = 0;
      virtual HRESULT __stdcall put_SRPArea (
        /*[in]*/ double pSRPArea ) = 0;
      virtual HRESULT __stdcall get_Mass (
        /*[out,retval]*/ double * pMass ) = 0;
      virtual HRESULT __stdcall put_Mass (
        /*[in]*/ double pMass ) = 0;
      virtual HRESULT __stdcall get_TimeSinceRefEpoch (
        /*[out,retval]*/ double * pTimeSinceRefEpoch ) = 0;
      virtual HRESULT __stdcall SetAtmFluxLags (
        /*[in]*/ double F10p7Lag,
        /*[in]*/ double GeoFluxLag ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall SunPosition (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall TransformVector (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pAltitude ) = 0;
      virtual HRESULT __stdcall LatLonAlt (
        /*[in,out]*/ double * Latitude,
        /*[in,out]*/ double * Longitude,
        /*[in,out]*/ double * Altitude ) = 0;
      virtual HRESULT __stdcall Trace (
        /*[in]*/ long NumCalls ) = 0;
      virtual HRESULT __stdcall RefEpoch (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall get_LightSpeed (
        /*[out,retval]*/ double * pLightSpeed ) = 0;
      virtual HRESULT __stdcall get_SolarFlux (
        /*[out,retval]*/ double * pSolarFlux ) = 0;
      virtual HRESULT __stdcall get_CbName (
        /*[out,retval]*/ BSTR * pCbName ) = 0;
      virtual HRESULT __stdcall PosVel_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SunPosition_Array (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVector_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall LatLonAlt_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall RefEpoch_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall CurrentAtmFlux (
        /*[in,out]*/ double * F10p7,
        /*[in,out]*/ double * AvgF10p7,
        /*[in,out]*/ double * Ap,
        /*[in,out]*/ double * ApDaily,
        /*[in,out]*/ double * Kp,
        /*[in,out]*/ double * KpDaily ) = 0;
      virtual HRESULT __stdcall CurrentAtmFlux_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AtmFlux (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in]*/ long WholeDays,
        /*[in]*/ double SecsIntoDay,
        /*[in,out]*/ double * F10p7,
        /*[in,out]*/ double * AvgF10p7,
        /*[in,out]*/ double * Ap,
        /*[in,out]*/ double * ApDaily,
        /*[in,out]*/ double * Kp,
        /*[in,out]*/ double * KpDaily ) = 0;
      virtual HRESULT __stdcall AtmFlux_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in]*/ long WholeDays,
        /*[in]*/ double SecsIntoDay,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AtmFluxLags (
        /*[in,out]*/ double * F10p7Lag,
        double * GeoFluxLag ) = 0;
      virtual HRESULT __stdcall AtmFluxLags_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IsForceModelOn (
        /*[in]*/ enum AgEForceModelType Type,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall ForceModelName (
        /*[in]*/ enum AgEForceModelType Type,
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall get_RadPressureCoefficient (
        /*[out,retval]*/ double * pCoef ) = 0;
      virtual HRESULT __stdcall put_RadPressureCoefficient (
        /*[in]*/ double pCoef ) = 0;
      virtual HRESULT __stdcall get_RadPressureArea (
        /*[out,retval]*/ double * pArea ) = 0;
      virtual HRESULT __stdcall put_RadPressureArea (
        /*[in]*/ double pArea ) = 0;
      virtual HRESULT __stdcall get_DryMass (
        /*[out,retval]*/ double * pDryMass ) = 0;
      virtual HRESULT __stdcall put_DryMass (
        /*[in]*/ double pDryMass ) = 0;
      virtual HRESULT __stdcall get_FuelMass (
        /*[out,retval]*/ double * pFuelMass ) = 0;
      virtual HRESULT __stdcall put_FuelMass (
        /*[in]*/ double pFuelMass ) = 0;
      virtual HRESULT __stdcall get_TotalMass (
        /*[out,retval]*/ double * pTotalMass ) = 0;
      virtual HRESULT __stdcall StopPropagation ( ) = 0;
      virtual HRESULT __stdcall IndicateEvent (
        /*[in]*/ enum AgEAsHpopPluginEventIndicators eEventIndicator ) = 0;
      virtual HRESULT __stdcall SetMaxStep (
        /*[in]*/ double MaxStep ) = 0;
};

struct __declspec(uuid("357b20a9-9025-4a08-ab7c-9332e2908809"))
AgAsHpopPluginResultEval;
    // [ default ] interface IAgAsHpopPluginResultEval

struct __declspec(uuid("4518fc76-4b7d-4926-9cb5-e36af7d94733"))
IAgAsHpopPluginResultEval : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pMu ) = 0;
      virtual HRESULT __stdcall PosVel (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall get_Cd (
        /*[out,retval]*/ double * pCd ) = 0;
      virtual HRESULT __stdcall put_Cd (
        /*[in]*/ double pCd ) = 0;
      virtual HRESULT __stdcall get_Cr (
        /*[out,retval]*/ double * pCr ) = 0;
      virtual HRESULT __stdcall put_Cr (
        /*[in]*/ double pCr ) = 0;
      virtual HRESULT __stdcall get_DragArea (
        /*[out,retval]*/ double * pDragArea ) = 0;
      virtual HRESULT __stdcall put_DragArea (
        /*[in]*/ double pDragArea ) = 0;
      virtual HRESULT __stdcall get_SRPArea (
        /*[out,retval]*/ double * pSRPArea ) = 0;
      virtual HRESULT __stdcall put_SRPArea (
        /*[in]*/ double pSRPArea ) = 0;
      virtual HRESULT __stdcall get_Mass (
        /*[out,retval]*/ double * pMass ) = 0;
      virtual HRESULT __stdcall get_TimeSinceRefEpoch (
        /*[out,retval]*/ double * pTimeSinceRefEpoch ) = 0;
      virtual HRESULT __stdcall SetAtmFluxLags (
        /*[in]*/ double F10p7Lag,
        /*[in]*/ double GeoFluxLag ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall SunPosition (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall TransformVector (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pAltitude ) = 0;
      virtual HRESULT __stdcall LatLonAlt (
        /*[in,out]*/ double * Latitude,
        /*[in,out]*/ double * Longitude,
        /*[in,out]*/ double * Altitude ) = 0;
      virtual HRESULT __stdcall get_DragAltitude (
        /*[out,retval]*/ double * pDragAltitude ) = 0;
      virtual HRESULT __stdcall get_AtmTemperature (
        /*[out,retval]*/ double * pAtmTemperature ) = 0;
      virtual HRESULT __stdcall get_AtmPressure (
        /*[out,retval]*/ double * pAtmPressure ) = 0;
      virtual HRESULT __stdcall get_Density (
        /*[out,retval]*/ double * pDensity ) = 0;
      virtual HRESULT __stdcall put_Density (
        /*[in]*/ double pDensity ) = 0;
      virtual HRESULT __stdcall get_SolarIntensity (
        /*[out,retval]*/ double * pSolarIntensity ) = 0;
      virtual HRESULT __stdcall put_SolarIntensity (
        /*[in]*/ double pSolarIntensity ) = 0;
      virtual HRESULT __stdcall AddAcceleration (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall Trace (
        /*[in]*/ long NumCalls ) = 0;
      virtual HRESULT __stdcall RefEpoch (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall get_LightSpeed (
        /*[out,retval]*/ double * pLightSpeed ) = 0;
      virtual HRESULT __stdcall get_SolarFlux (
        /*[out,retval]*/ double * pSolarFlux ) = 0;
      virtual HRESULT __stdcall get_CbName (
        /*[out,retval]*/ BSTR * pCbName ) = 0;
      virtual HRESULT __stdcall PosVel_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SunPosition_Array (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVector_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall LatLonAlt_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall RefEpoch_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall CurrentAtmFlux (
        /*[in,out]*/ double * F10p7,
        /*[in,out]*/ double * AvgF10p7,
        /*[in,out]*/ double * Ap,
        /*[in,out]*/ double * ApDaily,
        /*[in,out]*/ double * Kp,
        /*[in,out]*/ double * KpDaily ) = 0;
      virtual HRESULT __stdcall CurrentAtmFlux_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AtmFlux (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in]*/ long WholeDays,
        /*[in]*/ double SecsIntoDay,
        /*[in,out]*/ double * F10p7,
        /*[in,out]*/ double * AvgF10p7,
        /*[in,out]*/ double * Ap,
        /*[in,out]*/ double * ApDaily,
        /*[in,out]*/ double * Kp,
        /*[in,out]*/ double * KpDaily ) = 0;
      virtual HRESULT __stdcall AtmFlux_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in]*/ long WholeDays,
        /*[in]*/ double SecsIntoDay,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AtmFluxLags (
        /*[in,out]*/ double * F10p7Lag,
        double * GeoFluxLag ) = 0;
      virtual HRESULT __stdcall AtmFluxLags_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IsForceModelOn (
        /*[in]*/ enum AgEForceModelType Type,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall ForceModelName (
        /*[in]*/ enum AgEForceModelType Type,
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall get_RadPressureCoefficient (
        /*[out,retval]*/ double * pCoef ) = 0;
      virtual HRESULT __stdcall put_RadPressureCoefficient (
        /*[in]*/ double pCoef ) = 0;
      virtual HRESULT __stdcall get_RadPressureArea (
        /*[out,retval]*/ double * pArea ) = 0;
      virtual HRESULT __stdcall put_RadPressureArea (
        /*[in]*/ double pArea ) = 0;
      virtual HRESULT __stdcall get_DryMass (
        /*[out,retval]*/ double * pDryMass ) = 0;
      virtual HRESULT __stdcall get_FuelMass (
        /*[out,retval]*/ double * pFuelMass ) = 0;
      virtual HRESULT __stdcall get_TotalMass (
        /*[out,retval]*/ double * pTotalMass ) = 0;
      virtual HRESULT __stdcall StopPropagation ( ) = 0;
};

struct __declspec(uuid("4b9284de-3445-47c6-bc0e-b25ea9f0f4de"))
AgAsHpopPluginResultPostEval;
    // [ default ] interface IAgAsHpopPluginResultPostEval

enum AgEAccelType
{
    eTotalAccel = 0,
    eTwoBodyAccel = 1,
    eGravityAccel = 2,
    ePerturbedGravityAccel = 3,
    eSolidTidesAccel = 4,
    eOceanTidesAccel = 5,
    eDragAccel = 6,
    eSRPAccel = 7,
    eThirdBodyAccel = 8,
    eGenRelativityAccel = 9,
    eAddedAccel = 10,
    eAlbedoAccel = 11,
    eThermalRadiationPressureAccel = 12
};

struct __declspec(uuid("11317870-1ae0-416a-9e15-e00b71dfd5d9"))
IAgAsHpopPluginResultPostEval : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pMu ) = 0;
      virtual HRESULT __stdcall PosVel (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall get_Cd (
        /*[out,retval]*/ double * pCd ) = 0;
      virtual HRESULT __stdcall get_Cr (
        /*[out,retval]*/ double * pCr ) = 0;
      virtual HRESULT __stdcall get_DragArea (
        /*[out,retval]*/ double * pDragArea ) = 0;
      virtual HRESULT __stdcall get_SRPArea (
        /*[out,retval]*/ double * pSRPArea ) = 0;
      virtual HRESULT __stdcall get_Mass (
        /*[out,retval]*/ double * pMass ) = 0;
      virtual HRESULT __stdcall get_TimeSinceRefEpoch (
        /*[out,retval]*/ double * pTimeSinceRefEpoch ) = 0;
      virtual HRESULT __stdcall AccelName (
        /*[in]*/ enum AgEAccelType Type,
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall SunPosition (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall TransformVector (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pAltitude ) = 0;
      virtual HRESULT __stdcall LatLonAlt (
        /*[in,out]*/ double * Latitude,
        /*[in,out]*/ double * Longitude,
        /*[in,out]*/ double * Altitude ) = 0;
      virtual HRESULT __stdcall Trace (
        /*[in]*/ long NumCalls ) = 0;
      virtual HRESULT __stdcall RefEpoch (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall get_LightSpeed (
        /*[out,retval]*/ double * pLightSpeed ) = 0;
      virtual HRESULT __stdcall get_SolarFlux (
        /*[out,retval]*/ double * pSolarFlux ) = 0;
      virtual HRESULT __stdcall get_CbName (
        /*[out,retval]*/ BSTR * pCbName ) = 0;
      virtual HRESULT __stdcall PosVel_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SunPosition_Array (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVector_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall LatLonAlt_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall RefEpoch_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall CurrentAtmFlux (
        /*[in,out]*/ double * F10p7,
        /*[in,out]*/ double * AvgF10p7,
        /*[in,out]*/ double * Ap,
        /*[in,out]*/ double * ApDaily,
        /*[in,out]*/ double * Kp,
        /*[in,out]*/ double * KpDaily ) = 0;
      virtual HRESULT __stdcall CurrentAtmFlux_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AtmFlux (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in]*/ long WholeDays,
        /*[in]*/ double SecsIntoDay,
        /*[in,out]*/ double * F10p7,
        /*[in,out]*/ double * AvgF10p7,
        /*[in,out]*/ double * Ap,
        /*[in,out]*/ double * ApDaily,
        /*[in,out]*/ double * Kp,
        /*[in,out]*/ double * KpDaily ) = 0;
      virtual HRESULT __stdcall AtmFlux_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in]*/ long WholeDays,
        /*[in]*/ double SecsIntoDay,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AtmFluxLags (
        /*[in,out]*/ double * F10p7Lag,
        double * GeoFluxLag ) = 0;
      virtual HRESULT __stdcall AtmFluxLags_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall get_DragAltitude (
        /*[out,retval]*/ double * pDragAltitude ) = 0;
      virtual HRESULT __stdcall get_AtmTemperature (
        /*[out,retval]*/ double * pAtmTemperature ) = 0;
      virtual HRESULT __stdcall get_AtmPressure (
        /*[out,retval]*/ double * pAtmPressure ) = 0;
      virtual HRESULT __stdcall get_Density (
        /*[out,retval]*/ double * pDensity ) = 0;
      virtual HRESULT __stdcall get_SolarIntensity (
        /*[out,retval]*/ double * pSolarIntensity ) = 0;
      virtual HRESULT __stdcall AddAcceleration (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall GetAcceleration (
        /*[in]*/ enum AgEAccelType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall GetAcceleration_Array (
        /*[in]*/ enum AgEAccelType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IsForceModelOn (
        /*[in]*/ enum AgEForceModelType Type,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall ForceModelName (
        /*[in]*/ enum AgEForceModelType Type,
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall get_RadPressureCoefficient (
        /*[out,retval]*/ double * pCoef ) = 0;
      virtual HRESULT __stdcall get_RadPressureArea (
        /*[out,retval]*/ double * pArea ) = 0;
      virtual HRESULT __stdcall get_DryMass (
        /*[out,retval]*/ double * pDryMass ) = 0;
      virtual HRESULT __stdcall get_FuelMass (
        /*[out,retval]*/ double * pFuelMass ) = 0;
      virtual HRESULT __stdcall get_TotalMass (
        /*[out,retval]*/ double * pTotalMass ) = 0;
      virtual HRESULT __stdcall StopPropagation ( ) = 0;
};

struct __declspec(uuid("5fd6141c-31a7-4e6b-9ae1-5b6d98d26a85"))
AgAsHpopPluginSampleEngine;
    // [ default ] interface IAgAsHpopPluginSampleEngine
    // interface IAgAsHpopPlugin
    // interface IAgUtPluginConfig

struct __declspec(uuid("04f3121d-439f-4618-a6dc-4b0ec3d94c68"))
IAgAsHpopPluginSampleEngine : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Accel (
        /*[out,retval]*/ double * pAccel ) = 0;
      virtual HRESULT __stdcall put_Accel (
        /*[in]*/ double pAccel ) = 0;
      virtual HRESULT __stdcall get_ReportFrequency (
        /*[out,retval]*/ long * pFreq ) = 0;
      virtual HRESULT __stdcall put_ReportFrequency (
        /*[in]*/ long pFreq ) = 0;
      virtual HRESULT __stdcall get_DebugMode (
        /*[out,retval]*/ VARIANT_BOOL * pDebugMode ) = 0;
      virtual HRESULT __stdcall put_DebugMode (
        /*[in]*/ VARIANT_BOOL pDebugMode ) = 0;
};

struct __declspec(uuid("efca652b-b5e5-4e7d-bc93-4b81a1bd8aa5"))
IAgAsHpopPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Init (
        /*[in]*/ struct IAgUtPluginSite * Site,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
      virtual HRESULT __stdcall PrePropagate (
        /*[in]*/ struct IAgAsHpopPluginResult * Result,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall PostPropagate (
        /*[in]*/ struct IAgAsHpopPluginResult * Result,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall PreNextStep (
        /*[in]*/ struct IAgAsHpopPluginResult * Result,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ struct IAgAsHpopPluginResultEval * ResultEval,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall PostEvaluate (
        /*[in]*/ struct IAgAsHpopPluginResultPostEval * ResultPostEval,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pName ) = 0;
};

enum AgEAsLightReflectionErrorCodes
{
    E_LIGHTREFLECTION_PLUGIN_INTERNAL_FAILURE = -2147221247,
    E_LIGHTREFLECTION_PLUGIN_NOT_CONFIGURED = -2147221246,
    E_LIGHTREFLECTION_PLUGIN_TRANSFORM_FAILURE = -2147221245,
    E_LIGHTREFLECTION_PLUGIN_SETREFLECTANCE_FAILURE = -2147221244,
    E_LIGHTREFLECTION_PLUGIN_SETREFLECTANCE_PARTIALS_FAILURE = -2147221243,
    E_LIGHTREFLECTION_PLUGIN_PARAMETER_INDEXOUTOFRANGE = -2147221242,
    E_LIGHTREFLECTION_PLUGIN_PARAMETER_PARTIALS_FAILURE = -2147221241
};

struct __declspec(uuid("a9ca393c-32b2-4b50-bcd6-097f9e34f432"))
AgAsLightReflectionResultRegister;
    // [ default ] interface IAgAsLightReflectionResultRegister

struct __declspec(uuid("ef4cbec2-8bc9-4e4f-811e-1cc9b2209d37"))
IAgAsLightReflectionResultRegister : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall RegisterParameter (
        /*[in]*/ BSTR Name,
        /*[in]*/ double DefaultValue,
        /*[in]*/ double MinValue,
        /*[in]*/ double MaxValue,
        /*[in]*/ BSTR Dimension,
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall Message (
        /*[in]*/ enum AgEUtLogMsgType MsgType,
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall get_InstallDirectory (
        /*[out,retval]*/ BSTR * DirPath ) = 0;
      virtual HRESULT __stdcall get_ConfigDirectory (
        /*[out,retval]*/ BSTR * DirPath ) = 0;
};

struct __declspec(uuid("ded22cf8-921a-4310-bdb7-26417cd7846b"))
AgAsLightReflectionResult;
    // [ default ] interface IAgAsLightReflectionResult

struct __declspec(uuid("4825c756-3384-4028-ac6b-9c492cf54298"))
IAgAsLightReflectionResult : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Trace (
        /*[in]*/ long NumCalls ) = 0;
      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pMu ) = 0;
      virtual HRESULT __stdcall get_CbName (
        /*[out,retval]*/ BSTR * pCbName ) = 0;
      virtual HRESULT __stdcall get_LightSpeed (
        /*[out,retval]*/ double * pLightSpeed ) = 0;
      virtual HRESULT __stdcall get_SolarIntensity (
        /*[out,retval]*/ double * pSolarIntensity ) = 0;
      virtual HRESULT __stdcall get_SolarFlux (
        /*[out,retval]*/ double * pSolarFlux ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall get_TotalMass (
        /*[out,retval]*/ double * pTotalMass ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pAltitude ) = 0;
      virtual HRESULT __stdcall PosVel (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall PosVel_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall LatLonAlt (
        /*[in,out]*/ double * Latitude,
        /*[in,out]*/ double * Longitude,
        /*[in,out]*/ double * Altitude ) = 0;
      virtual HRESULT __stdcall LatLonAlt_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SunPosition (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall SunPosition_Array (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVector (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall TransformVector_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirection (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall IncidentDirection_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVectorToBody (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall TransformVectorToBody_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVectorFromBody (
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall TransformVectorFromBody_Array (
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirectionInBody (
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall IncidentDirectionInBody_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
};

struct __declspec(uuid("94c4ce80-d5ff-4441-8a07-4f7cc07e858d"))
AgAsLightReflectionResultEval;
    // [ default ] interface IAgAsLightReflectionResultEval

struct __declspec(uuid("18153b47-d0b5-46c1-8f58-fcc8ebdebd19"))
IAgAsLightReflectionResultEval : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Trace (
        /*[in]*/ long NumCalls ) = 0;
      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pMu ) = 0;
      virtual HRESULT __stdcall get_CbName (
        /*[out,retval]*/ BSTR * pCbName ) = 0;
      virtual HRESULT __stdcall get_LightSpeed (
        /*[out,retval]*/ double * pLightSpeed ) = 0;
      virtual HRESULT __stdcall get_SolarIntensity (
        /*[out,retval]*/ double * pSolarIntensity ) = 0;
      virtual HRESULT __stdcall get_SolarFlux (
        /*[out,retval]*/ double * pSolarFlux ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall get_TotalMass (
        /*[out,retval]*/ double * pTotalMass ) = 0;
      virtual HRESULT __stdcall get_Altitude (
        /*[out,retval]*/ double * pAltitude ) = 0;
      virtual HRESULT __stdcall PosVel (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall PosVel_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall LatLonAlt (
        /*[in,out]*/ double * Latitude,
        /*[in,out]*/ double * Longitude,
        /*[in,out]*/ double * Altitude ) = 0;
      virtual HRESULT __stdcall LatLonAlt_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SunPosition (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall SunPosition_Array (
        /*[in]*/ enum AgEUtSunPosType SunPosType,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVector (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall TransformVector_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirection (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall IncidentDirection_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SetReflectanceInBody (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall SetReflectance (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall IncidentDirectionVecInBodyPosPartials (
        /*[in,out]*/ double * DirXwrtX,
        /*[in,out]*/ double * DirXwrtY,
        /*[in,out]*/ double * DirXwrtZ,
        /*[in,out]*/ double * DirYwrtX,
        /*[in,out]*/ double * DirYwrtY,
        /*[in,out]*/ double * DirYwrtZ,
        /*[in,out]*/ double * DirZwrtX,
        /*[in,out]*/ double * DirZwrtY,
        /*[in,out]*/ double * DirZwrtZ ) = 0;
      virtual HRESULT __stdcall IncidentDirectionVecInBodyPosPartials_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirectionVecPosPartials (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * DirXwrtX,
        /*[in,out]*/ double * DirXwrtY,
        /*[in,out]*/ double * DirXwrtZ,
        /*[in,out]*/ double * DirYwrtX,
        /*[in,out]*/ double * DirYwrtY,
        /*[in,out]*/ double * DirYwrtZ,
        /*[in,out]*/ double * DirZwrtX,
        /*[in,out]*/ double * DirZwrtY,
        /*[in,out]*/ double * DirZwrtZ ) = 0;
      virtual HRESULT __stdcall IncidentDirectionVecPosPartials_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirectionBodyCompPosPartials (
        /*[in,out]*/ double * DirXwrtX,
        /*[in,out]*/ double * DirXwrtY,
        /*[in,out]*/ double * DirXwrtZ,
        /*[in,out]*/ double * DirYwrtX,
        /*[in,out]*/ double * DirYwrtY,
        /*[in,out]*/ double * DirYwrtZ,
        /*[in,out]*/ double * DirZwrtX,
        /*[in,out]*/ double * DirZwrtY,
        /*[in,out]*/ double * DirZwrtZ ) = 0;
      virtual HRESULT __stdcall IncidentDirectionBodyCompPosPartials_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirectionCompPosPartials (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * DirXwrtX,
        /*[in,out]*/ double * DirXwrtY,
        /*[in,out]*/ double * DirXwrtZ,
        /*[in,out]*/ double * DirYwrtX,
        /*[in,out]*/ double * DirYwrtY,
        /*[in,out]*/ double * DirYwrtZ,
        /*[in,out]*/ double * DirZwrtX,
        /*[in,out]*/ double * DirZwrtY,
        /*[in,out]*/ double * DirZwrtZ ) = 0;
      virtual HRESULT __stdcall IncidentDirectionCompPosPartials_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirectionBodyCompVelPartials (
        /*[in,out]*/ double * DirXwrtX,
        /*[in,out]*/ double * DirXwrtY,
        /*[in,out]*/ double * DirXwrtZ,
        /*[in,out]*/ double * DirYwrtX,
        /*[in,out]*/ double * DirYwrtY,
        /*[in,out]*/ double * DirYwrtZ,
        /*[in,out]*/ double * DirZwrtX,
        /*[in,out]*/ double * DirZwrtY,
        /*[in,out]*/ double * DirZwrtZ ) = 0;
      virtual HRESULT __stdcall IncidentDirectionBodyCompVelPartials_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirectionCompVelPartials (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * DirXwrtX,
        /*[in,out]*/ double * DirXwrtY,
        /*[in,out]*/ double * DirXwrtZ,
        /*[in,out]*/ double * DirYwrtX,
        /*[in,out]*/ double * DirYwrtY,
        /*[in,out]*/ double * DirYwrtZ,
        /*[in,out]*/ double * DirZwrtX,
        /*[in,out]*/ double * DirZwrtY,
        /*[in,out]*/ double * DirZwrtZ ) = 0;
      virtual HRESULT __stdcall IncidentDirectionCompVelPartials_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SetReflectanceBodyCompPosPartials (
        /*[in]*/ double ReflectXwrtX,
        /*[in]*/ double ReflectXwrtY,
        /*[in]*/ double ReflectXwrtZ,
        /*[in]*/ double ReflectYwrtX,
        /*[in]*/ double ReflectYwrtY,
        /*[in]*/ double ReflectYwrtZ,
        /*[in]*/ double ReflectZwrtX,
        /*[in]*/ double ReflectZwrtY,
        /*[in]*/ double ReflectZwrtZ ) = 0;
      virtual HRESULT __stdcall SetReflectanceCompPosPartials (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double ReflectXwrtX,
        /*[in]*/ double ReflectXwrtY,
        /*[in]*/ double ReflectXwrtZ,
        /*[in]*/ double ReflectYwrtX,
        /*[in]*/ double ReflectYwrtY,
        /*[in]*/ double ReflectYwrtZ,
        /*[in]*/ double ReflectZwrtX,
        /*[in]*/ double ReflectZwrtY,
        /*[in]*/ double ReflectZwrtZ ) = 0;
      virtual HRESULT __stdcall SetReflectanceBodyCompVelPartials (
        /*[in]*/ double ReflectXwrtVX,
        /*[in]*/ double ReflectXwrtVY,
        /*[in]*/ double ReflectXwrtVZ,
        /*[in]*/ double ReflectYwrtVX,
        /*[in]*/ double ReflectYwrtVY,
        /*[in]*/ double ReflectYwrtVZ,
        /*[in]*/ double ReflectZwrtVX,
        /*[in]*/ double ReflectZwrtVY,
        /*[in]*/ double ReflectZwrtVZ ) = 0;
      virtual HRESULT __stdcall SetReflectanceCompVelPartials (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double ReflectXwrtVX,
        /*[in]*/ double ReflectXwrtVY,
        /*[in]*/ double ReflectXwrtVZ,
        /*[in]*/ double ReflectYwrtVX,
        /*[in]*/ double ReflectYwrtVY,
        /*[in]*/ double ReflectYwrtVZ,
        /*[in]*/ double ReflectZwrtVX,
        /*[in]*/ double ReflectZwrtVY,
        /*[in]*/ double ReflectZwrtVZ ) = 0;
      virtual HRESULT __stdcall BodyFixedVectorPosPartials (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in,out]*/ double * VecXwrtX,
        /*[in,out]*/ double * VecXwrtY,
        /*[in,out]*/ double * VecXwrtZ,
        /*[in,out]*/ double * VecYwrtX,
        /*[in,out]*/ double * VecYwrtY,
        /*[in,out]*/ double * VecYwrtZ,
        /*[in,out]*/ double * VecZwrtX,
        /*[in,out]*/ double * VecZwrtY,
        /*[in,out]*/ double * VecZwrtZ ) = 0;
      virtual HRESULT __stdcall BodyFixedVectorPosPartials_Array (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall FrameFixedVectorPosPartials (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in,out]*/ double * VecXwrtVX,
        /*[in,out]*/ double * VecXwrtVY,
        /*[in,out]*/ double * VecXwrtVZ,
        /*[in,out]*/ double * VecYwrtVX,
        /*[in,out]*/ double * VecYwrtVY,
        /*[in,out]*/ double * VecYwrtVZ,
        /*[in,out]*/ double * VecZwrtVX,
        /*[in,out]*/ double * VecZwrtVY,
        /*[in,out]*/ double * VecZwrtVZ ) = 0;
      virtual HRESULT __stdcall FrameFixedVectorPosPartials_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall BodyFixedVectorVelPartials (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in,out]*/ double * VecXwrtVX,
        /*[in,out]*/ double * VecXwrtVY,
        /*[in,out]*/ double * VecXwrtVZ,
        /*[in,out]*/ double * VecYwrtVX,
        /*[in,out]*/ double * VecYwrtVY,
        /*[in,out]*/ double * VecYwrtVZ,
        /*[in,out]*/ double * VecZwrtVX,
        /*[in,out]*/ double * VecZwrtVY,
        /*[in,out]*/ double * VecZwrtVZ ) = 0;
      virtual HRESULT __stdcall BodyFixedVectorVelPartials_Array (
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall FrameFixedVectorVelPartials (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[in,out]*/ double * VecXwrtVX,
        /*[in,out]*/ double * VecXwrtVY,
        /*[in,out]*/ double * VecXwrtVZ,
        /*[in,out]*/ double * VecYwrtVX,
        /*[in,out]*/ double * VecYwrtVY,
        /*[in,out]*/ double * VecYwrtVZ,
        /*[in,out]*/ double * VecZwrtVX,
        /*[in,out]*/ double * VecZwrtVY,
        /*[in,out]*/ double * VecZwrtVZ ) = 0;
      virtual HRESULT __stdcall FrameFixedVectorVelPartials_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall ParameterValue (
        /*[in]*/ long Index,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall get_ParameterValue_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall SetReflectanceInBodyParamPartials (
        /*[in]*/ long Index,
        /*[in]*/ double ReflectXwrtParam,
        /*[in]*/ double ReflectYwrtParam,
        /*[in]*/ double ReflectZwrtParam ) = 0;
      virtual HRESULT __stdcall SetReflectanceParamPartials (
        /*[in]*/ long Index,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double ReflectXwrtParam,
        /*[in]*/ double ReflectYwrtParam,
        /*[in]*/ double ReflectZwrtParam ) = 0;
      virtual HRESULT __stdcall TransformVectorToBody (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall TransformVectorToBody_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVectorFromBody (
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall TransformVectorFromBody_Array (
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall IncidentDirectionInBody (
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall IncidentDirectionInBody_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
};

struct __declspec(uuid("f3cf5cb5-dd6b-48c5-ae4d-51f82a775fce"))
AgAsLightReflectionPluginSample;
    // [ default ] interface IAgAsLightReflectionPluginSample
    // interface IAgAsLightReflectionPlugin
    // interface IAgUtPluginConfig

struct __declspec(uuid("597d4d2b-fcdd-479f-88cc-2026f011f5cf"))
IAgAsLightReflectionPluginSample : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ReportFrequency (
        /*[out,retval]*/ long * pFreq ) = 0;
      virtual HRESULT __stdcall put_ReportFrequency (
        /*[in]*/ long pFreq ) = 0;
      virtual HRESULT __stdcall get_DebugMode (
        /*[out,retval]*/ VARIANT_BOOL * pDebugMode ) = 0;
      virtual HRESULT __stdcall put_DebugMode (
        /*[in]*/ VARIANT_BOOL pDebugMode ) = 0;
};

struct __declspec(uuid("c4e69b72-9c58-4b63-b720-9c96124fc2e4"))
IAgAsLightReflectionPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Register (
        /*[in]*/ struct IAgAsLightReflectionResultRegister * Result ) = 0;
      virtual HRESULT __stdcall Init (
        /*[in]*/ struct IAgUtPluginSite * Site,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[in]*/ struct IAgAsLightReflectionResult * Result,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall PostCompute (
        /*[in]*/ struct IAgAsLightReflectionResult * Result,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ struct IAgAsLightReflectionResultEval * ResultEval,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
};

struct __declspec(uuid("15801b96-9b6e-4c96-8f04-cbb468299fd4"))
AgEOMFuncHPOPPluginResult;
    // [ default ] interface IAgAsHpopPluginResult

struct __declspec(uuid("ea817097-9a1e-4692-9921-c03c28ff00ab"))
AgEOMFuncHPOPPluginResultEval;
    // [ default ] interface IAgAsHpopPluginResultEval

struct __declspec(uuid("0fa794a8-8416-4a5d-929d-9e6d352d96d1"))
AgEOMFuncHPOPPluginResultPostEval;
    // [ default ] interface IAgAsHpopPluginResultPostEval

enum AgEAsEOMFuncPluginInputStateValues
{
    AgEAsEOMFuncPluginInputStateValuesPosX = 0,
    AgEAsEOMFuncPluginInputStateValuesPosY = 1,
    AgEAsEOMFuncPluginInputStateValuesPosZ = 2,
    AgEAsEOMFuncPluginInputStateValuesVelX = 3,
    AgEAsEOMFuncPluginInputStateValuesVelY = 4,
    AgEAsEOMFuncPluginInputStateValuesVelZ = 5,
    AgEAsEOMFuncPluginInputStateValuesPosCBFX = 6,
    AgEAsEOMFuncPluginInputStateValuesPosCBFY = 7,
    AgEAsEOMFuncPluginInputStateValuesPosCBFZ = 8,
    AgEAsEOMFuncPluginInputStateValuesVelCBFX = 9,
    AgEAsEOMFuncPluginInputStateValuesVelCBFY = 10,
    AgEAsEOMFuncPluginInputStateValuesVelCBFZ = 11,
    AgEAsEOMFuncPluginInputStateValuesCBIVelInCBFX = 12,
    AgEAsEOMFuncPluginInputStateValuesCBIVelInCBFY = 13,
    AgEAsEOMFuncPluginInputStateValuesCBIVelInCBFZ = 14,
    AgEAsEOMFuncPluginInputStateValuesQuat1 = 15,
    AgEAsEOMFuncPluginInputStateValuesQuat2 = 16,
    AgEAsEOMFuncPluginInputStateValuesQuat3 = 17,
    AgEAsEOMFuncPluginInputStateValuesQuat4 = 18,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF00 = 19,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF01 = 20,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF02 = 21,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF10 = 22,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF11 = 23,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF12 = 24,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF20 = 25,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF21 = 26,
    AgEAsEOMFuncPluginInputStateValuesCBIToCBF22 = 27,
    AgEAsEOMFuncPluginInputStateValuesAngVelCBFX = 28,
    AgEAsEOMFuncPluginInputStateValuesAngVelCBFY = 29,
    AgEAsEOMFuncPluginInputStateValuesAngVelCBFZ = 30,
    AgEAsEOMFuncPluginInputStateValuesAltitude = 31,
    AgEAsEOMFuncPluginInputStateValuesLatitude = 32,
    AgEAsEOMFuncPluginInputStateValuesLongitude = 33,
    AgEAsEOMFuncPluginInputStateValuesTotalMass = 34,
    AgEAsEOMFuncPluginInputStateValuesDryMass = 35,
    AgEAsEOMFuncPluginInputStateValuesFuelMass = 36,
    AgEAsEOMFuncPluginInputStateValuesCd = 37,
    AgEAsEOMFuncPluginInputStateValuesDragArea = 38,
    AgEAsEOMFuncPluginInputStateValuesAtmosphericDensity = 39,
    AgEAsEOMFuncPluginInputStateValuesAtmosphericAltitude = 40,
    AgEAsEOMFuncPluginInputStateValuesCr = 41,
    AgEAsEOMFuncPluginInputStateValuesSRPArea = 42,
    AgEAsEOMFuncPluginInputStateValuesKr1 = 43,
    AgEAsEOMFuncPluginInputStateValuesKr2 = 44,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSunPosCBFX = 45,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSunPosCBFY = 46,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSunPosCBFZ = 47,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSatPosCBFX = 48,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSatPosCBFY = 49,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSatPosCBFZ = 50,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSatToSunCBIPosX = 51,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSatToSunCBIPosY = 52,
    AgEAsEOMFuncPluginInputStateValuesApparentToTrueCbSatToSunCBIPosZ = 53,
    AgEAsEOMFuncPluginInputStateValuesApparentSunPosCBFX = 54,
    AgEAsEOMFuncPluginInputStateValuesApparentSunPosCBFY = 55,
    AgEAsEOMFuncPluginInputStateValuesApparentSunPosCBFZ = 56,
    AgEAsEOMFuncPluginInputStateValuesApparentSatPosCBFX = 57,
    AgEAsEOMFuncPluginInputStateValuesApparentSatPosCBFY = 58,
    AgEAsEOMFuncPluginInputStateValuesApparentSatPosCBFZ = 59,
    AgEAsEOMFuncPluginInputStateValuesApparentSatToSunCBIPosX = 60,
    AgEAsEOMFuncPluginInputStateValuesApparentSatToSunCBIPosY = 61,
    AgEAsEOMFuncPluginInputStateValuesApparentSatToSunCBIPosZ = 62,
    AgEAsEOMFuncPluginInputStateValuesTrueSunPosCBFX = 63,
    AgEAsEOMFuncPluginInputStateValuesTrueSunPosCBFY = 64,
    AgEAsEOMFuncPluginInputStateValuesTrueSunPosCBFZ = 65,
    AgEAsEOMFuncPluginInputStateValuesTrueSatPosCBFX = 66,
    AgEAsEOMFuncPluginInputStateValuesTrueSatPosCBFY = 67,
    AgEAsEOMFuncPluginInputStateValuesTrueSatPosCBFZ = 68,
    AgEAsEOMFuncPluginInputStateValuesTrueSatToSunCBIPosX = 69,
    AgEAsEOMFuncPluginInputStateValuesTrueSatToSunCBIPosY = 70,
    AgEAsEOMFuncPluginInputStateValuesTrueSatToSunCBIPosZ = 71,
    AgEAsEOMFuncPluginInputStateValuesSolarIntensity = 72,
    AgEAsEOMFuncPluginInputStateValuesRadPressureCoefficient = 73,
    AgEAsEOMFuncPluginInputStateValuesRadPressureArea = 74,
    AgEAsEOMFuncPluginInputStateValuesMassFlowRate = 75,
    AgEAsEOMFuncPluginInputStateValuesTankPressure = 76,
    AgEAsEOMFuncPluginInputStateValuesTankTemperature = 77,
    AgEAsEOMFuncPluginInputStateValuesFuelDensity = 78,
    AgEAsEOMFuncPluginInputStateValuesThrustX = 79,
    AgEAsEOMFuncPluginInputStateValuesThrustY = 80,
    AgEAsEOMFuncPluginInputStateValuesThrustZ = 81,
    AgEAsEOMFuncPluginInputStateValuesDeltaV = 82,
    AgEAsEOMFuncPluginInputStateValuesGravityAccelX = 83,
    AgEAsEOMFuncPluginInputStateValuesGravityAccelY = 84,
    AgEAsEOMFuncPluginInputStateValuesGravityAccelZ = 85,
    AgEAsEOMFuncPluginInputStateValuesTwoBodyAccelX = 86,
    AgEAsEOMFuncPluginInputStateValuesTwoBodyAccelY = 87,
    AgEAsEOMFuncPluginInputStateValuesTwoBodyAccelZ = 88,
    AgEAsEOMFuncPluginInputStateValuesGravityPertAccelX = 89,
    AgEAsEOMFuncPluginInputStateValuesGravityPertAccelY = 90,
    AgEAsEOMFuncPluginInputStateValuesGravityPertAccelZ = 91,
    AgEAsEOMFuncPluginInputStateValuesSolidTidesAccelX = 92,
    AgEAsEOMFuncPluginInputStateValuesSolidTidesAccelY = 93,
    AgEAsEOMFuncPluginInputStateValuesSolidTidesAccelZ = 94,
    AgEAsEOMFuncPluginInputStateValuesOceanTidesAccelX = 95,
    AgEAsEOMFuncPluginInputStateValuesOceanTidesAccelY = 96,
    AgEAsEOMFuncPluginInputStateValuesOceanTidesAccelZ = 97,
    AgEAsEOMFuncPluginInputStateValuesDragAccelX = 98,
    AgEAsEOMFuncPluginInputStateValuesDragAccelY = 99,
    AgEAsEOMFuncPluginInputStateValuesDragAccelZ = 100,
    AgEAsEOMFuncPluginInputStateValuesThirdBodyAccelX = 101,
    AgEAsEOMFuncPluginInputStateValuesThirdBodyAccelY = 102,
    AgEAsEOMFuncPluginInputStateValuesThirdBodyAccelZ = 103,
    AgEAsEOMFuncPluginInputStateValuesSRPAccelX = 104,
    AgEAsEOMFuncPluginInputStateValuesSRPAccelY = 105,
    AgEAsEOMFuncPluginInputStateValuesSRPAccelZ = 106,
    AgEAsEOMFuncPluginInputStateValuesNoShadowSRPAccelX = 107,
    AgEAsEOMFuncPluginInputStateValuesNoShadowSRPAccelY = 108,
    AgEAsEOMFuncPluginInputStateValuesNoShadowSRPAccelZ = 109,
    AgEAsEOMFuncPluginInputStateValuesGenRelAccelX = 110,
    AgEAsEOMFuncPluginInputStateValuesGenRelAccelY = 111,
    AgEAsEOMFuncPluginInputStateValuesGenRelAccelZ = 112,
    AgEAsEOMFuncPluginInputStateValuesAlbedoAccelX = 113,
    AgEAsEOMFuncPluginInputStateValuesAlbedoAccelY = 114,
    AgEAsEOMFuncPluginInputStateValuesAlbedoAccelZ = 115,
    AgEAsEOMFuncPluginInputStateValuesThermalPressureAccelX = 116,
    AgEAsEOMFuncPluginInputStateValuesThermalPressureAccelY = 117,
    AgEAsEOMFuncPluginInputStateValuesThermalPressureAccelZ = 118,
    AgEAsEOMFuncPluginInputStateValuesAddedAccelX = 119,
    AgEAsEOMFuncPluginInputStateValuesAddedAccelY = 120,
    AgEAsEOMFuncPluginInputStateValuesAddedAccelZ = 121,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosXPosX = 122,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosXPosY = 123,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosXPosZ = 124,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosXVelX = 125,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosXVelY = 126,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosXVelZ = 127,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosYPosX = 128,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosYPosY = 129,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosYPosZ = 130,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosYVelX = 131,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosYVelY = 132,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosYVelZ = 133,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosZPosX = 134,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosZPosY = 135,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosZPosZ = 136,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosZVelX = 137,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosZVelY = 138,
    AgEAsEOMFuncPluginInputStateValuesStateTransPosZVelZ = 139,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelXPosX = 140,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelXPosY = 141,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelXPosZ = 142,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelXVelX = 143,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelXVelY = 144,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelXVelZ = 145,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelYPosX = 146,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelYPosY = 147,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelYPosZ = 148,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelYVelX = 149,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelYVelY = 150,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelYVelZ = 151,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelZPosX = 152,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelZPosY = 153,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelZPosZ = 154,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelZVelX = 155,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelZVelY = 156,
    AgEAsEOMFuncPluginInputStateValuesStateTransVelZVelZ = 157
};

enum AgEAsEOMFuncPluginOutputStateValues
{
    AgEAsEOMFuncPluginOutputStateValuesDryMass = 0,
    AgEAsEOMFuncPluginOutputStateValuesFuelMass = 1,
    AgEAsEOMFuncPluginOutputStateValuesCd = 2,
    AgEAsEOMFuncPluginOutputStateValuesDragArea = 3,
    AgEAsEOMFuncPluginOutputStateValuesAtmosphericDensity = 4,
    AgEAsEOMFuncPluginOutputStateValuesAtmosphericAltitude = 5,
    AgEAsEOMFuncPluginOutputStateValuesCr = 6,
    AgEAsEOMFuncPluginOutputStateValuesSRPArea = 7,
    AgEAsEOMFuncPluginOutputStateValuesKr1 = 8,
    AgEAsEOMFuncPluginOutputStateValuesKr2 = 9,
    AgEAsEOMFuncPluginOutputStateValuesSolarIntensity = 10,
    AgEAsEOMFuncPluginOutputStateValuesRadPressureCoefficient = 11,
    AgEAsEOMFuncPluginOutputStateValuesRadPressureArea = 12
};

enum AgEAsEOMFuncPluginEventTypes
{
    AgEAsEOMFuncPluginEventTypesPrePropagate = 0,
    AgEAsEOMFuncPluginEventTypesPreNextStep = 1,
    AgEAsEOMFuncPluginEventTypesEvaluate = 2,
    AgEAsEOMFuncPluginEventTypesPostPropagate = 3
};

struct __declspec(uuid("7b7aaacb-773c-4c5d-bd88-62d0a9f05663"))
IAgAsEOMFuncPluginRegisterHandler : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall RegisterInput (
        /*[in]*/ enum AgEAsEOMFuncPluginInputStateValues StateValue ) = 0;
      virtual HRESULT __stdcall RegisterUserInput (
        /*[in]*/ BSTR UserValue ) = 0;
      virtual HRESULT __stdcall RegisterParameterOutput (
        /*[in]*/ enum AgEAsEOMFuncPluginOutputStateValues StateValue ) = 0;
      virtual HRESULT __stdcall RegisterUserParameterOutput (
        /*[in]*/ BSTR UserValue ) = 0;
      virtual HRESULT __stdcall RegisterUserDerivativeOutput (
        /*[in]*/ BSTR UserValue ) = 0;
      virtual HRESULT __stdcall ExcludeEvent (
        /*[in]*/ enum AgEAsEOMFuncPluginEventTypes EventType ) = 0;
};

struct __declspec(uuid("c0b4c47f-9292-4f13-ba9b-7dc4117e6720"))
IAgAsEOMFuncPluginSetIndicesHandler : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetInputIndex (
        /*[in]*/ enum AgEAsEOMFuncPluginInputStateValues StateValue,
        /*[out,retval]*/ int * pIndex ) = 0;
      virtual HRESULT __stdcall GetUserInputIndex (
        /*[in]*/ BSTR UserValue,
        /*[out,retval]*/ int * pIndex ) = 0;
      virtual HRESULT __stdcall GetParameterOutputIndex (
        /*[in]*/ enum AgEAsEOMFuncPluginOutputStateValues StateValue,
        /*[out,retval]*/ int * pIndex ) = 0;
      virtual HRESULT __stdcall GetUserParameterOutputIndex (
        /*[in]*/ BSTR UserValue,
        /*[out,retval]*/ int * pIndex ) = 0;
      virtual HRESULT __stdcall GetUserDerivativeOutputIndex (
        /*[in]*/ BSTR UserValue,
        /*[out,retval]*/ int * pIndex ) = 0;
};

struct __declspec(uuid("0bccb4e4-1ca6-4919-9f24-dca7b7407fad"))
IAgAsEOMFuncPluginStateVector : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetInputValue (
        /*[in]*/ int Index,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall SetParameterOutputValue (
        /*[in]*/ int Index,
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall AddDerivativeOutputValue (
        /*[in]*/ int Index,
        /*[in]*/ double Val ) = 0;
      virtual HRESULT __stdcall get_TimeSinceRefEpoch (
        /*[out,retval]*/ double * pTimeSinceRefEpoch ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall RefEpoch (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall get_CbName (
        /*[out,retval]*/ BSTR * pCbName ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall RefEpoch_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall PosVel (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall PosVel_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall TransformVector (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[in,out]*/ double * XTo,
        /*[in,out]*/ double * YTo,
        /*[in,out]*/ double * ZTo ) = 0;
      virtual HRESULT __stdcall TransformVector_Array (
        /*[in]*/ enum AgEUtFrame FrameFrom,
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double ZFrom,
        /*[in]*/ enum AgEUtFrame FrameTo,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AddAcceleration (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in]*/ double X,
        /*[in]*/ double Y,
        /*[in]*/ double Z ) = 0;
      virtual HRESULT __stdcall get_Mu (
        /*[out,retval]*/ double * pMu ) = 0;
      virtual HRESULT __stdcall StopPropagation ( ) = 0;
      virtual HRESULT __stdcall IndicateEvent (
        /*[in]*/ enum AgEAsHpopPluginEventIndicators eEventIndicator ) = 0;
      virtual HRESULT __stdcall SetMaxStep (
        /*[in]*/ double MaxStep ) = 0;
};

struct __declspec(uuid("10ccc6c0-58cc-4ec3-bab2-aad3e8ccb7b0"))
IAgAsEOMFuncPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Init (
        /*[in]*/ struct IAgUtPluginSite * Site,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
      virtual HRESULT __stdcall Register (
        /*[in]*/ struct IAgAsEOMFuncPluginRegisterHandler * pRegisterHandler,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall SetIndices (
        /*[in]*/ struct IAgAsEOMFuncPluginSetIndicesHandler * pSetIndicesHandler,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Calc (
        /*[in]*/ enum AgEAsEOMFuncPluginEventTypes EventType,
        /*[in]*/ struct IAgAsEOMFuncPluginStateVector * pStateVector,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pName ) = 0;
};

enum AgEAsEOMFuncPluginErrorCodes
{
    E_EOMFUNC_PLUGIN_INTERNAL_FAILURE = -2147221247,
    E_EOMFUNC_PLUGIN_NOT_CONFIGURED = -2147221246,
    E_EOMFUNC_PLUGIN_INDEX_OUT_OF_RANGE = -2147221245,
    E_EOMFUNC_PLUGIN_INPUT_NOT_REGISTERED = -2147221244,
    E_EOMFUNC_PLUGIN_PARAMOUTPUT_NOT_REGISTERED = -2147221243,
    E_EOMFUNC_PLUGIN_DERIVOUTPUT_NOT_REGISTERED = -2147221242,
    E_EOMFUNC_PLUGIN_INVALID_STATEVAR = -2147221241,
    E_EOMFUNC_PLUGIN_INVALID_EVENT_TYPE = -2147221240,
    E_EOMFUNC_PLUGIN_INPUT_NOT_REAL = -2147221239
};

struct __declspec(uuid("f2944f15-b537-43f3-addc-25acb8e1c03d"))
AgAsEOMFuncPluginRegisterHandler;
    // [ default ] interface IAgAsEOMFuncPluginRegisterHandler

struct __declspec(uuid("5d375748-e65d-4d56-b8b5-29771164a93c"))
AgAsEOMFuncPluginSetIndicesHandler;
    // [ default ] interface IAgAsEOMFuncPluginSetIndicesHandler

struct __declspec(uuid("1f6573bf-2831-441e-89bc-ffe3214840d8"))
AgAsEOMFuncPluginStateVector;
    // [ default ] interface IAgAsEOMFuncPluginStateVector

#pragma pack(pop)
