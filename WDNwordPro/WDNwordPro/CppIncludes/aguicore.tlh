// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (dc956152).
//
// c:\dev\r_stk_v10.1.x\source\lib\release.net\tlhbuilder\aguicore.tlh
//
// C++ source equivalent of Win32 type library AgUiCore.tlb
// compiler-generated file created 02/15/14 at 04:45:27 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "C:\Dev\R_STK_v10.1.x\Source\bin\Release.NET\AgAsHpopPlugin.DLL"
//  #import "C:\Dev\R_STK_v10.1.x\Source\bin\Release.NET\AgUiApplication.tlb"
//  #import "C:\Dev\R_STK_v10.1.x\Source\bin\Release.NET\AgUiCore.dll"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("8bbf5167-5434-4da9-a411-12f54cba6e87"))
/* LIBID */ __AgUiCoreLib;
struct /* coclass */ AgUiWindowsCollection;
struct __declspec(uuid("4dd6fb87-c329-41a5-a359-8a9c03569635"))
/* dual interface */ IAgUiWindowsCollection;
struct __declspec(uuid("05f59555-f74c-48b2-aab4-1e6c58d7aeb7"))
/* interface */ IAgUiWindow;
enum AgEWindowState;
enum AgEDockStyle;
struct __declspec(uuid("62aa135b-4f2f-45de-94a6-31bb0984ad28"))
/* dual interface */ IAgUiToolbarCollection;
struct __declspec(uuid("69c72c16-36f2-42d4-a183-6879bb5b8070"))
/* interface */ IAgUiToolbar;
enum AgEFloatState;
enum AgEWindowService;
enum AgEArrangeStyle;
struct /* coclass */ AgUiWindow;
struct __declspec(uuid("7ba21513-b774-4b68-8517-462c365641dd"))
/* dual interface */ _IAgUiWindow;
struct /* coclass */ AgUiToolbar;
struct __declspec(uuid("0859d6d9-472d-44fb-80b6-0a0cc5119e91"))
/* dual interface */ _IAgUiToolbar;
struct /* coclass */ AgUiToolbarCollection;
struct /* coclass */ AgUiWindowMapObject;
struct __declspec(uuid("5fd247f7-f520-464a-9937-028d8384fbc3"))
/* dual interface */ _IAgUiWindowMapObject;
struct __declspec(uuid("a94c0929-7448-4e9e-beb8-8f7a8f252d0d"))
/* interface */ IAgUiWindowMapObject;
struct /* coclass */ AgUiWindowGlobeObject;
struct __declspec(uuid("40b06213-8a37-40d3-a289-bf9d248fdd54"))
/* dual interface */ _IAgUiWindowGlobeObject;
struct __declspec(uuid("b958edbd-0569-4596-a253-bd90328844d0"))
/* interface */ IAgUiWindowGlobeObject;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAgUiToolbar, __uuidof(IAgUiToolbar));
_COM_SMARTPTR_TYPEDEF(IAgUiToolbarCollection, __uuidof(IAgUiToolbarCollection));
_COM_SMARTPTR_TYPEDEF(IAgUiWindow, __uuidof(IAgUiWindow));
_COM_SMARTPTR_TYPEDEF(IAgUiWindowsCollection, __uuidof(IAgUiWindowsCollection));
_COM_SMARTPTR_TYPEDEF(_IAgUiWindow, __uuidof(_IAgUiWindow));
_COM_SMARTPTR_TYPEDEF(_IAgUiToolbar, __uuidof(_IAgUiToolbar));
_COM_SMARTPTR_TYPEDEF(_IAgUiWindowMapObject, __uuidof(_IAgUiWindowMapObject));
_COM_SMARTPTR_TYPEDEF(IAgUiWindowMapObject, __uuidof(IAgUiWindowMapObject));
_COM_SMARTPTR_TYPEDEF(_IAgUiWindowGlobeObject, __uuidof(_IAgUiWindowGlobeObject));
_COM_SMARTPTR_TYPEDEF(IAgUiWindowGlobeObject, __uuidof(IAgUiWindowGlobeObject));

//
// Type library items
//

struct __declspec(uuid("abf3afeb-cdb0-4831-af14-43ca93c610f8"))
AgUiWindowsCollection;
    // [ default ] interface IUnknown
    // interface IAgUiWindowsCollection

enum AgEWindowState
{
    eWindowStateMaximized = 1,
    eWindowStateMinimized = 2,
    eWindowStateNormal = 3
};

enum AgEDockStyle
{
    eDockStyleIntegrated = 1,
    eDockStyleDockedLeft = 2,
    eDockStyleDockedRight = 3,
    eDockStyleDockedTop = 4,
    eDockStyleDockedBottom = 5,
    eDockStyleFloating = 6
};

enum AgEFloatState
{
    eFloatStateFloated = 1,
    eFloatStateDocked = 2
};

struct __declspec(uuid("69c72c16-36f2-42d4-a183-6879bb5b8070"))
IAgUiToolbar : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_FloatState (
        /*[out,retval]*/ enum AgEFloatState * pVal ) = 0;
      virtual HRESULT __stdcall put_FloatState (
        /*[in]*/ enum AgEFloatState pVal ) = 0;
};

struct __declspec(uuid("62aa135b-4f2f-45de-94a6-31bb0984ad28"))
IAgUiToolbarCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrCaption,
        /*[out,retval]*/ struct IAgUiToolbar * * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppVal ) = 0;
      virtual HRESULT __stdcall GetToolbarByID (
        /*[in]*/ long ID,
        /*[out,retval]*/ struct IAgUiToolbar * * pVal ) = 0;
};

enum AgEWindowService
{
    eWindowService2DWindow = 1,
    eWindowService3DWindow = 2
};

struct __declspec(uuid("05f59555-f74c-48b2-aab4-1e6c58d7aeb7"))
IAgUiWindow : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum AgEWindowState * pVal ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum AgEWindowState pVal ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DockStyle (
        /*[out,retval]*/ enum AgEDockStyle * pVal ) = 0;
      virtual HRESULT __stdcall put_DockStyle (
        /*[in]*/ enum AgEDockStyle pVal ) = 0;
      virtual HRESULT __stdcall get_NoWBClose (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_NoWBClose (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UnPinned (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UnPinned (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SupportsPinning (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Toolbars (
        /*[out,retval]*/ struct IAgUiToolbarCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall GetServiceByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall GetServiceByType (
        /*[in]*/ enum AgEWindowService ServiceType,
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
};

enum AgEArrangeStyle
{
    eArrangeStyleCascade = 1,
    eArrangeStyleTiledHorizontal = 2,
    eArrangeStyleTiledVertical = 3
};

struct __declspec(uuid("4dd6fb87-c329-41a5-a359-8a9c03569635"))
IAgUiWindowsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrCaption,
        /*[out,retval]*/ struct IAgUiWindow * * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall Arrange (
        /*[in]*/ enum AgEArrangeStyle ArrangeStyle ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR PluginID,
        /*[in]*/ VARIANT InitData,
        /*[out,retval]*/ struct IAgUiWindow * * pNewWin ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppVal ) = 0;
};

struct __declspec(uuid("af6988ef-a90d-4f21-b4c9-613f195a90d7"))
AgUiWindow;
    // [ default ] interface _IAgUiWindow
    // interface IAgUiWindow

struct __declspec(uuid("7ba21513-b774-4b68-8517-462c365641dd"))
_IAgUiWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum AgEWindowState * pVal ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum AgEWindowState pVal ) = 0;
      virtual HRESULT __stdcall Close ( ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DockStyle (
        /*[out,retval]*/ enum AgEDockStyle * pVal ) = 0;
      virtual HRESULT __stdcall put_DockStyle (
        /*[in]*/ enum AgEDockStyle pVal ) = 0;
      virtual HRESULT __stdcall get_NoWBClose (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_NoWBClose (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UnPinned (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UnPinned (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SupportsPinning (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Toolbars (
        /*[out,retval]*/ struct IAgUiToolbarCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall GetServiceByName (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
      virtual HRESULT __stdcall GetServiceByType (
        /*[in]*/ enum AgEWindowService ServiceType,
        /*[out,retval]*/ IUnknown * * ppRetVal ) = 0;
};

struct __declspec(uuid("0cc80202-308e-4617-8c95-eff905d1d857"))
AgUiToolbar;
    // [ default ] interface _IAgUiToolbar
    // interface IAgUiToolbar

struct __declspec(uuid("0859d6d9-472d-44fb-80b6-0a0cc5119e91"))
_IAgUiToolbar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_FloatState (
        /*[out,retval]*/ enum AgEFloatState * pVal ) = 0;
      virtual HRESULT __stdcall put_FloatState (
        /*[in]*/ enum AgEFloatState pVal ) = 0;
};

struct __declspec(uuid("2af54c92-dfdb-4db1-a4c2-1edbca89d104"))
AgUiToolbarCollection;
    // [ default ] interface IUnknown
    // interface IAgUiToolbarCollection

struct __declspec(uuid("57571508-d56e-48ed-bc02-16cbf5103199"))
AgUiWindowMapObject;
    // [ default ] interface _IAgUiWindowMapObject
    // interface IAgUiWindowMapObject

struct __declspec(uuid("5fd247f7-f520-464a-9937-028d8384fbc3"))
_IAgUiWindowMapObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MapID (
        /*[out,retval]*/ long * pRetVal ) = 0;
};

struct __declspec(uuid("a94c0929-7448-4e9e-beb8-8f7a8f252d0d"))
IAgUiWindowMapObject : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MapID (
        /*[out,retval]*/ long * pRetVal ) = 0;
};

struct __declspec(uuid("c56c4002-4df7-4756-ba56-9a97289228e2"))
AgUiWindowGlobeObject;
    // [ default ] interface _IAgUiWindowGlobeObject
    // interface IAgUiWindowGlobeObject

struct __declspec(uuid("40b06213-8a37-40d3-a289-bf9d248fdd54"))
_IAgUiWindowGlobeObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SceneID (
        /*[out,retval]*/ long * pRetVal ) = 0;
};

struct __declspec(uuid("b958edbd-0569-4596-a253-bd90328844d0"))
IAgUiWindowGlobeObject : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SceneID (
        /*[out,retval]*/ long * pRetVal ) = 0;
};

#pragma pack(pop)
