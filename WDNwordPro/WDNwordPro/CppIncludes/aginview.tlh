// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (9e7d7515).
//
// c:\r_stk_v9.2.x\source\lib\release.net\tlhbuilder\aginview.tlh
//
// C++ source equivalent of Win32 type library AgInview.tlb
// compiler-generated file created 11/23/11 at 05:29:07 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace AccessConstraint {

//
// Forward references and typedefs
//

struct __declspec(uuid("2596914d-6d54-4b06-b1d4-8180ea3e62cc"))
/* LIBID */ __AgAccessConstraintPlugin;
struct __declspec(uuid("ea97a2de-ef8a-40ac-a828-b4882c5fd815"))
/* interface */ IAgAccessConstraintPlugin;
struct __declspec(uuid("a9513408-7b86-4331-aef2-a12848dc0c94"))
/* dual interface */ IAgAccessConstraintPluginResultRegister;
enum AgEAccessConstraintObjectType;
struct __declspec(uuid("fd05d93e-871d-43b5-bc9d-aea3be0faa46"))
/* dual interface */ IAgAccessConstraintPluginResultPreCompute;
struct __declspec(uuid("2e7cb866-8f43-4331-84ad-3c843b8957cd"))
/* dual interface */ IAgAccessConstraintPluginObjectDescriptor;
struct __declspec(uuid("d7c3529c-5f6f-409a-93c9-e4d4dc36cfe9"))
/* dual interface */ IAgAccessConstraintPluginResultEval;
enum AgEAccessLightTimeDelayFrame;
enum AgEApparentPositionAberrationType;
struct __declspec(uuid("71d28592-cf66-4a67-a5ac-9e30fa6cf0db"))
/* dual interface */ IAgAccessConstraintPluginObjectData;
enum AgEApparentPositionSignalSense;
enum AgEAltitudeReference;
enum AgEAccessApparentPositionType;
struct __declspec(uuid("e3138bf9-8a16-4829-a9da-07cd62683590"))
/* dual interface */ IAgAccessConstraintPluginResultPostCompute;
enum AgEAccessConstraintDependencyFlags;
enum AgEAccessConstraintPluginErrorCodes;
struct /* coclass */ AgAccessConstraintPluginResultRegister;
struct /* coclass */ AgAccessConstraintPluginObjectData;
struct /* coclass */ AgAccessConstraintPluginObjectDescriptor;
struct /* coclass */ AgAccessConstraintPluginResultPreCompute;
struct /* coclass */ AgAccessConstraintPluginResultEval;
struct /* coclass */ AgAccessConstraintPluginResultPostCompute;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAgAccessConstraintPluginResultRegister, __uuidof(IAgAccessConstraintPluginResultRegister));
_COM_SMARTPTR_TYPEDEF(IAgAccessConstraintPluginObjectDescriptor, __uuidof(IAgAccessConstraintPluginObjectDescriptor));
_COM_SMARTPTR_TYPEDEF(IAgAccessConstraintPluginResultPreCompute, __uuidof(IAgAccessConstraintPluginResultPreCompute));
_COM_SMARTPTR_TYPEDEF(IAgAccessConstraintPluginResultEval, __uuidof(IAgAccessConstraintPluginResultEval));
_COM_SMARTPTR_TYPEDEF(IAgAccessConstraintPluginObjectData, __uuidof(IAgAccessConstraintPluginObjectData));
_COM_SMARTPTR_TYPEDEF(IAgAccessConstraintPluginResultPostCompute, __uuidof(IAgAccessConstraintPluginResultPostCompute));
_COM_SMARTPTR_TYPEDEF(IAgAccessConstraintPlugin, __uuidof(IAgAccessConstraintPlugin));

//
// Type library items
//

enum __declspec(uuid("dfcb7912-dcc5-48e7-8e26-f3717700e92c"))
AgEAccessConstraintObjectType
{
    eAircraft = 1,
    eFacility = 8,
    eGroundVehicle = 9,
    eLaunchVehicle = 10,
    eMissile = 13,
    ePlanet = 15,
    eRadar = 16,
    eReceiver = 17,
    eSatellite = 18,
    eSensor = 20,
    eShip = 21,
    eStar = 22,
    eSubmarine = 30,
    eTarget = 23,
    eTransmitter = 24
};

struct __declspec(uuid("a9513408-7b86-4331-aef2-a12848dc0c94"))
IAgAccessConstraintPluginResultRegister : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Reset ( ) = 0;
      virtual HRESULT __stdcall ClearTargets ( ) = 0;
      virtual HRESULT __stdcall AddTarget (
        /*[in]*/ enum AgEAccessConstraintObjectType Type ) = 0;
      virtual HRESULT __stdcall Targets (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall ObjectTypeName (
        /*[in]*/ enum AgEAccessConstraintObjectType Type,
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall Register ( ) = 0;
      virtual HRESULT __stdcall get_BaseObjectType (
        /*[out,retval]*/ enum AgEAccessConstraintObjectType * pType ) = 0;
      virtual HRESULT __stdcall put_BaseObjectType (
        /*[in]*/ enum AgEAccessConstraintObjectType pType ) = 0;
      virtual HRESULT __stdcall get_BaseDependency (
        /*[out,retval]*/ long * pDepMask ) = 0;
      virtual HRESULT __stdcall put_BaseDependency (
        /*[in]*/ long pDepMask ) = 0;
      virtual HRESULT __stdcall get_TargetDependency (
        /*[out,retval]*/ long * pDepMask ) = 0;
      virtual HRESULT __stdcall put_TargetDependency (
        /*[in]*/ long pDepMask ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ BSTR * pDimension ) = 0;
      virtual HRESULT __stdcall put_Dimension (
        /*[in]*/ BSTR pDimension ) = 0;
      virtual HRESULT __stdcall get_MinValue (
        /*[out,retval]*/ double * pMinValue ) = 0;
      virtual HRESULT __stdcall put_MinValue (
        /*[in]*/ double pMinValue ) = 0;
      virtual HRESULT __stdcall get_MaxValue (
        /*[out,retval]*/ double * pMaxValue ) = 0;
      virtual HRESULT __stdcall put_MaxValue (
        /*[in]*/ double pMaxValue ) = 0;
      virtual HRESULT __stdcall get_MaxRelMotion (
        /*[out,retval]*/ double * pMaxRelMotion ) = 0;
      virtual HRESULT __stdcall put_MaxRelMotion (
        /*[in]*/ double pMaxRelMotion ) = 0;
      virtual HRESULT __stdcall get_InstallDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall get_ConfigDirectory (
        /*[out,retval]*/ BSTR * pDirPath ) = 0;
      virtual HRESULT __stdcall Message (
        /*[in]*/ enum AgEUtLogMsgType MsgType,
        /*[in]*/ BSTR Message ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ long * pWeight ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ long pWeight ) = 0;
      virtual HRESULT __stdcall get_MaxTimeStep (
        /*[out,retval]*/ double * pMaxTimeStep ) = 0;
      virtual HRESULT __stdcall put_MaxTimeStep (
        /*[in]*/ double pMaxTimeStep ) = 0;
};

struct __declspec(uuid("2e7cb866-8f43-4331-84ad-3c843b8957cd"))
IAgAccessConstraintPluginObjectDescriptor : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IsValid (
        /*[out,retval]*/ VARIANT_BOOL * pIsValid ) = 0;
      virtual HRESULT __stdcall get_VectorToolProvider (
        /*[out,retval]*/ struct IAgCrdnPluginProvider * * ppCrdnPrv ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ enum AgEAccessConstraintObjectType * pType ) = 0;
      virtual HRESULT __stdcall get_ObjectPath (
        /*[out,retval]*/ BSTR * pPath ) = 0;
      virtual HRESULT __stdcall get_ShortDescription (
        /*[out,retval]*/ BSTR * pDescription ) = 0;
      virtual HRESULT __stdcall put_ShortDescription (
        /*[in]*/ BSTR pDescription ) = 0;
      virtual HRESULT __stdcall get_LongDescription (
        /*[out,retval]*/ BSTR * pDescription ) = 0;
      virtual HRESULT __stdcall put_LongDescription (
        /*[in]*/ BSTR pDescription ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pPath ) = 0;
};

struct __declspec(uuid("fd05d93e-871d-43b5-bc9d-aea3be0faa46"))
IAgAccessConstraintPluginResultPreCompute : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Base (
        /*[out,retval]*/ struct IAgAccessConstraintPluginObjectDescriptor * * ppObjectDescriptor ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ struct IAgAccessConstraintPluginObjectDescriptor * * ppObjectDescriptor ) = 0;
};

enum __declspec(uuid("127be62a-08cd-403e-a48f-f985e2c84009"))
AgEAccessLightTimeDelayFrame
{
    eLightTimeDelayFrameCBI = 1,
    eLightTimeDelayFrameSSBary = 2
};

enum __declspec(uuid("0993541b-d71b-429d-b106-f174dcf049af"))
AgEApparentPositionAberrationType
{
    eAberrationTotal = 1,
    eAberrationAnnual = 2,
    eAberrationNone = 3
};

struct __declspec(uuid("d7c3529c-5f6f-409a-93c9-e4d4dc36cfe9"))
IAgAccessConstraintPluginResultEval : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ double * pValue ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ double pValue ) = 0;
      virtual HRESULT __stdcall get_MaxRelMotion (
        /*[out,retval]*/ double * pMaxRelMotion ) = 0;
      virtual HRESULT __stdcall put_MaxRelMotion (
        /*[in]*/ double pMaxRelMotion ) = 0;
      virtual HRESULT __stdcall get_StepSize (
        /*[out,retval]*/ double * pStepSize ) = 0;
      virtual HRESULT __stdcall put_StepSize (
        /*[in]*/ double pStepSize ) = 0;
      virtual HRESULT __stdcall get_IsLightTimeDelayConsidered (
        /*[out,retval]*/ VARIANT_BOOL * pIsValid ) = 0;
      virtual HRESULT __stdcall get_LightTimeDelayFrame (
        /*[out,retval]*/ enum AgEAccessLightTimeDelayFrame * pFrame ) = 0;
      virtual HRESULT __stdcall get_AberrationType (
        /*[out,retval]*/ enum AgEApparentPositionAberrationType * pType ) = 0;
      virtual HRESULT __stdcall get_LightTimeDelay (
        /*[out,retval]*/ double * pTimeDelayValue ) = 0;
      virtual HRESULT __stdcall get_LightPathRange (
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
};

enum __declspec(uuid("9e06f1b5-d030-4be9-80f8-5f29f492d372"))
AgEApparentPositionSignalSense
{
    eTransmitSignal = 1,
    eReceiveSignal = 2
};

enum __declspec(uuid("8b4fe764-6bb9-43f9-888f-90ac6fcc530b"))
AgEAltitudeReference
{
    eEllispoidReference = 1,
    eMSLReference = 2,
    eTerrainReference = 3
};

enum __declspec(uuid("0cfc6bd0-7c7b-4925-b748-32f5c9bfc690"))
AgEAccessApparentPositionType
{
    eLightPathApparentPosition = 1,
    eRefractedApparentPosition = 2,
    eProperApparentPosition = 3
};

struct __declspec(uuid("71d28592-cf66-4a67-a5ac-9e30fa6cf0db"))
IAgAccessConstraintPluginObjectData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Descriptor (
        /*[out,retval]*/ struct IAgAccessConstraintPluginObjectDescriptor * * ppObjectDescriptor ) = 0;
      virtual HRESULT __stdcall get_CentralBodyName (
        /*[out,retval]*/ BSTR * pPath ) = 0;
      virtual HRESULT __stdcall get_SignalSense (
        /*[out,retval]*/ enum AgEApparentPositionSignalSense * pSignalSense ) = 0;
      virtual HRESULT __stdcall get_IsClockHost (
        /*[out,retval]*/ VARIANT_BOOL * pIsClockHost ) = 0;
      virtual HRESULT __stdcall get_IsRefractionComputed (
        /*[out,retval]*/ VARIANT_BOOL * pIsComputed ) = 0;
      virtual HRESULT __stdcall get_GeometryMask (
        /*[out,retval]*/ long * pMask ) = 0;
      virtual HRESULT __stdcall DayCount (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * WholeDays,
        /*[in,out]*/ double * SecsIntoDay ) = 0;
      virtual HRESULT __stdcall DayCount_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Date (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[in,out]*/ long * Year,
        /*[in,out]*/ long * DayOfYear,
        /*[in,out]*/ long * Month,
        /*[in,out]*/ long * Hour,
        /*[in,out]*/ long * Minute,
        /*[in,out]*/ double * Seconds ) = 0;
      virtual HRESULT __stdcall Date_Array (
        /*[in]*/ enum AgEUtTimeScale Scale,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Position (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall Position_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Velocity (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall Velocity_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Acceleration (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * Ax,
        /*[in,out]*/ double * Ay,
        /*[in,out]*/ double * Az ) = 0;
      virtual HRESULT __stdcall Acceleration_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall LatLonAlt (
        /*[in,out]*/ double * Latitude,
        /*[in,out]*/ double * Longitude,
        /*[in,out]*/ double * Altitude ) = 0;
      virtual HRESULT __stdcall LatLonAlt_Array (
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Altitude (
        /*[in]*/ enum AgEAltitudeReference AltRef,
        /*[out,retval]*/ double * pAltitude ) = 0;
      virtual HRESULT __stdcall Range (
        /*[in]*/ enum AgEAccessApparentPositionType Type,
        /*[out,retval]*/ double * pRange ) = 0;
      virtual HRESULT __stdcall RelativePosition (
        /*[in]*/ enum AgEAccessApparentPositionType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall RelativePosition_Array (
        /*[in]*/ enum AgEAccessApparentPositionType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall RelativeVelocity (
        /*[in]*/ enum AgEAccessApparentPositionType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * Vx,
        /*[in,out]*/ double * Vy,
        /*[in,out]*/ double * Vz ) = 0;
      virtual HRESULT __stdcall RelativeVelocity_Array (
        /*[in]*/ enum AgEAccessApparentPositionType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall RelativeAcceleration (
        /*[in]*/ enum AgEAccessApparentPositionType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * Ax,
        /*[in,out]*/ double * Ay,
        /*[in,out]*/ double * Az ) = 0;
      virtual HRESULT __stdcall RelativeAcceleration_Array (
        /*[in]*/ enum AgEAccessApparentPositionType Type,
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall ApparentSunPosition (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * X,
        /*[in,out]*/ double * Y,
        /*[in,out]*/ double * Z ) = 0;
      virtual HRESULT __stdcall ApparentSunPosition_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall Attitude (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * Q1,
        /*[in,out]*/ double * Q2,
        /*[in,out]*/ double * Q3,
        /*[in,out]*/ double * Q4 ) = 0;
      virtual HRESULT __stdcall Attitude_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
      virtual HRESULT __stdcall AngularVelocity (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[in,out]*/ double * Wx,
        /*[in,out]*/ double * Wy,
        /*[in,out]*/ double * Wz ) = 0;
      virtual HRESULT __stdcall AngularVelocity_Array (
        /*[in]*/ enum AgEUtFrame Frame,
        /*[out,retval]*/ SAFEARRAY * * pArray ) = 0;
};

struct __declspec(uuid("e3138bf9-8a16-4829-a9da-07cd62683590"))
IAgAccessConstraintPluginResultPostCompute : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Base (
        /*[out,retval]*/ struct IAgAccessConstraintPluginObjectDescriptor * * ppObjectDescriptor ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ struct IAgAccessConstraintPluginObjectDescriptor * * ppObjectDescriptor ) = 0;
};

struct __declspec(uuid("ea97a2de-ef8a-40ac-a828-b4882c5fd815"))
IAgAccessConstraintPlugin : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * pDisplayName ) = 0;
      virtual HRESULT __stdcall Register (
        /*[in]*/ struct IAgAccessConstraintPluginResultRegister * Result ) = 0;
      virtual HRESULT __stdcall Init (
        /*[in]*/ struct IAgUtPluginSite * Site,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall PreCompute (
        /*[in]*/ struct IAgAccessConstraintPluginResultPreCompute * Result,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ struct IAgAccessConstraintPluginResultEval * Result,
        /*[in]*/ struct IAgAccessConstraintPluginObjectData * BaseData,
        /*[in]*/ struct IAgAccessConstraintPluginObjectData * TargetData,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall PostCompute (
        /*[in]*/ struct IAgAccessConstraintPluginResultPostCompute * Result,
        /*[out,retval]*/ VARIANT_BOOL * pResult ) = 0;
      virtual HRESULT __stdcall Free ( ) = 0;
};

enum __declspec(uuid("03080d80-aea7-4825-9c09-b3e4f6077f1a"))
AgEAccessConstraintDependencyFlags
{
    eDependencyRelativePosVel = 1,
    eDependencyRelativeAcc = 2,
    eDependencyPosVel = 4,
    eDependencyAcc = 8,
    eDependencyAttitude = 16,
    eDependencyRelSun = 32,
    eDependencyNone = 4096
};

enum AgEAccessConstraintPluginErrorCodes
{
    E_ACCESS_CONSTRAINT_PLUGIN_INTERNAL_FAILURE = -2147221247,
    E_ACCESS_CONSTRAINT_PLUGIN_OBJECT_PATH_UNAVAILABLE = -2147221246,
    E_ACCESS_CONSTRAINT_PLUGIN_OBJECT_CENTRAL_BODY_NAME_UNAVAILABLE = -2147221245,
    E_ACCESS_CONSTRAINT_PLUGIN_IMPLEMENTATION_INCOMPLETE_ERROR = -2147221244,
    E_ACCESS_CONSTRAINT_PLUGIN_PLUGIN_INITIALIZATION_ERROR = -2147221243,
    E_ACCESS_CONSTRAINT_PLUGIN_PLUGIN_UNINITIALIZATION_ERROR = -2147221242,
    E_ACCESS_CONSTRAINT_PLUGIN_OBJECT_TYPE_INVALID = -2147221241,
    E_ACCESS_CONSTRAINT_PLUGIN_REGISTER_NO_TARGETS = -2147221240,
    E_ACCESS_CONSTRAINT_PLUGIN_BAD_REQUEST_FRAME = -2147221239,
    E_ACCESS_CONSTRAINT_PLUGIN_GEOMETRY_NOT_COMPUTED = -2147221238,
    E_ACCESS_CONSTRAINT_PLUGIN_INVALID_ALT_REF = -2147221237,
    E_ACCESS_CONSTRAINT_PLUGIN_INVALID_APP_POS = -2147221236,
    E_ACCESS_CONSTRAINT_PLUGIN_INVALID_DIMENSION = -2147221235,
    E_ACCESS_CONSTRAINT_PLUGIN_INVALID_WEIGHT = -2147221234
};

struct __declspec(uuid("9936a533-4de7-484c-bbee-0d1a479ecb46"))
AgAccessConstraintPluginResultRegister;
    // [ default ] interface IAgAccessConstraintPluginResultRegister

struct __declspec(uuid("2a23242d-6bce-438f-b21c-084fff304aa9"))
AgAccessConstraintPluginObjectData;
    // [ default ] interface IAgAccessConstraintPluginObjectData

struct __declspec(uuid("e7f9b1c1-4eec-4a93-b21d-b12a1676e96c"))
AgAccessConstraintPluginObjectDescriptor;
    // [ default ] interface IAgAccessConstraintPluginObjectDescriptor

struct __declspec(uuid("f73653da-e905-4229-b804-9023e704aa86"))
AgAccessConstraintPluginResultPreCompute;
    // [ default ] interface IAgAccessConstraintPluginResultPreCompute

struct __declspec(uuid("0c7f7b02-f84e-45bd-a68b-65cfacff04b2"))
AgAccessConstraintPluginResultEval;
    // [ default ] interface IAgAccessConstraintPluginResultEval

struct __declspec(uuid("2f7f62b8-861c-4c85-b718-75ae622d35d3"))
AgAccessConstraintPluginResultPostCompute;
    // [ default ] interface IAgAccessConstraintPluginResultPostCompute

} // namespace AccessConstraint

#pragma pack(pop)
